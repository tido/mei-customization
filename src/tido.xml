<?xml version="1.0" encoding="UTF-8"?>
<!--
© 2015 by the Music Encoding Initiative (MEI).
Licensed under the Educational Community License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at http://opensource.org/licenses/ECL-2.0.
Unless required by applicable law or agreed to in writing, software distributed
under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
CONDITIONS OF ANY KIND, either express or implied. See the License for the
specific language governing permissions and limitations under the License.
This is a derivative work based on earlier versions of the schema

© 2001-2006 Perry Roland and the Rector and Visitors of the University of Virginia;
licensed under the Educational Community License version 1.0.

CONTACT: info@music-encoding.org
-->
<?xml-model href="http://www.tei-c.org/release/xml/tei/custom/schema/relaxng/tei_odds.rng" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?> <?xml-model href="http://www.tei-c.org/release/xml/tei/custom/schema/relaxng/tei_odds.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:rng="http://relaxng.org/ns/structure/1.0"
  xmlns:sch="http://purl.oclc.org/dsdl/schematron" xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:tido="http://tido-music.com/ns/1.0">
  <teiHeader>
    <fileDesc>
      <titleStmt>
        <title type="main">Tido Project Specific Customization of the Music Encoding Initiative
          Guidelines</title>
        <author xml:id="RV">Raffaele Viglianti</author>
        <author xml:id="ZK">Zoltán Kőmíves</author>
        <author xml:id="AE">Alexander Erhard</author>
      </titleStmt>
      <publicationStmt>
        <publisher>Tido Ltd.</publisher>
        <availability status="restricted">
          <p>Copyright 2014-2016 Tido Ltd.</p>
          <p>All rights reserved.</p>
        </availability>
      </publicationStmt>
      <sourceDesc>
        <p>Born digital.</p>
      </sourceDesc>
    </fileDesc>
  </teiHeader>
  <text>
    <front>
      <divGen type="toc"/>
    </front>
    <body>
      <div>
        <head>Introduction</head>
        <p>This document describes the use of MEI for tido.</p>
        <p>The <ref target="http://music-encoding.org/documentation/guidelines2013/chapters">MEI
            Guidelines</ref> should still be used for general information on how to use MEI. This
          document describes how tido constrains or diverges from the MEI specification. </p>
        <p>However, the <ref target="#tidoSchemaSpec">Specifications</ref> section lists all the
          elements and classes used by the tido MEI schema and can be used as a technical reference
          instead of the official MEI documentation.</p>
        <p>Apart from the core 'tido' MEI specifications, from which the schema to validate
          production-ready data is derived, the tido ODD contains a set of
          specifications ('tido.sibelius') from which a less restrictive schema is created, which
          can be used to validate the output of the Tido Sibelius converter.</p>
        <p>Unless stated otherwise, the prose section of the tido ODD refers to the tido core
          specifications.</p>
      </div>
      <div>
        <head>Module Selection</head>
        <p>tido MEI only adopts CMN logical modules. The following modules are in use:</p>
        <list>
          <item>Shared</item>
          <item>Header</item>
          <item>CMN</item>
          <item>CMN Ornaments</item>
          <item>Critical Apparatus</item>
          <item>Editing and Transcription</item>
          <item>Lyrics</item>
          <item>Names and Dates</item>
          <item>Text Encoding</item>
        </list>
      </div>
      <div>
        <head>Common Attributes</head>
        <p><att>xml:id</att> is mandatory on all elements, <att>n</att> on <list>
          <item><gi>layer</gi></item>
          <item><gi>staff</gi></item>
          <item><gi>verse</gi></item>
        </list></p>
      </div>
      <div>
        <head>Score and staff definitions</head>
        <div>
          <head>Time signature</head>
          <p>Time signature <emph>must</emph> be expressed in a <gi>meterSig</gi> child element of
              <gi>staffDef</gi> at this stage of development.</p>
          <p>To define a time signature, tido uses <att>unit</att> and <att>count</att> on
              <gi>meterSig</gi>. They <emph>must</emph> occur together: </p>
          <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="feasible"
            tido:wrapper="inInitialStaffGrp">
            <staffDef xml:id="d001">
              <meterSig count="4" unit="4" xml:id="d002"/>
            </staffDef>
          </egXML>
          <p>Attributes for encoding time signatures on <gi>scoreDef</gi> and <gi>staffDef</gi> are
            excluded from the schema.</p>
        </div>
        <div>
          <head>Key signature</head>
          <p>Key signature <emph>must</emph> be expressed in <gi>keySig</gi> elements placed as
            child elements of <gi>staffDef</gi> at this stage of development.</p>
          <p>To define a key signature, tido uses the <att>pname</att>, <att>accid</att> and
              <att>mode</att> attributes of <gi>keySig</gi>. <att>pname</att> and <att>mode</att>
            <emph>must</emph> occur together, <att>accid</att> is optional. </p>
          <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="feasible"
            tido:wrapper="inInitialStaffDefGrp">
            <staffDef xml:id="d003">
              <keySig pname="f" accid="s" mode="major" xml:id="d004"/>
            </staffDef>
          </egXML>
          <p>Attributes for encoding key signatures on <gi>scoreDef</gi> and <gi>staffDef</gi> are
            excluded from the schema.</p>
        </div>
        <div>
          <head>Clefs</head>
          <p>Clefs <emph>must</emph> be expressed using the <gi>clef</gi> element.</p>
          <p>To define a clef, tido uses <att>shape</att> and <att>line</att>, which
              <emph>must</emph> occur together. </p>
          <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="feasible"
            tido:wrapper="inInitialStaffGrp">
            <staffDef lines="5" xml:id="d005" n="2">
              <clef shape="G" line="2" xml:id="d006"/>
            </staffDef>
          </egXML>
          <p>Attributes for encoding clefs on <gi>scoreDef</gi> and <gi>staffDef</gi> are excluded
            from the schema.</p>
        </div>
      </div>
      <div>
        <head>Events</head>
        <p>This section describes restrictions to timed events on staves, such as notes, rests.
          etc.</p>
        <div>
          <head>Notes</head>
          <p> Notes must either have an octave and a pitch name or a <att>loc</att> attribute. Stem direction remains optional,
            but is recommended. When notes are in a chord they must not express stem information. </p>
          <p>This is a typical note:</p>
          <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" tido:wrapper="inLayer">
            <note pname="a" oct="4" dur="4" stem.dir="up" xml:id="d007"/>
          </egXML>
        </div>
        <div>
          <head>Duration</head>
          <p>The specification of duration on events is more tightly controlled in the tido
            schema.</p>
          <div>
            <head>Notes</head>
            <p>Notes must always have a duration (<att>dur</att>) except when they are part of
              chords.</p>
          </div>
          <div>
            <head>Rests and spaces</head>
            <p>Rest and spaces must always have a duration (<att>dur</att>).</p>
          </div>
          <div>
            <head>Chords</head>
            <p>Duration on chords must be expressed on the <gi>chord</gi> element. The constituent
                <gi>note</gi> elements may also express duration, but must agree with the value
              expressed on the chord. The following are valid examples:</p>
            <list>
              <item>Duration on chord: <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true"
                  tido:wrapper="inLayer">
                  <chord dur="4" xml:id="d008">
                    <note pname="a" oct="4" xml:id="d009"/>
                    <note pname="f" oct="4" xml:id="d010"/>
                  </chord>
                </egXML>
              </item>
              <item>Duration on both chord and notes (must match): <egXML
                  xmlns="http://www.tei-c.org/ns/Examples" valid="true" tido:wrapper="inLayer">
                  <chord dur="4" xml:id="d011">
                    <note pname="a" oct="4" xml:id="d012"/>
                    <note pname="f" oct="4" xml:id="d013"/>
                  </chord>
                </egXML>
              </item>
            </list>
          </div>
          <div>
            <head>Control events</head>
            <p>Control events like <gi>dir</gi> or <gi>hairpin</gi> can be placed either directly
              above or below a single staff or in the middle between two staves. Placement above or
              below a staff is indicated by the <att>place</att> attribute, a position between two
              staves is expressed by specifying the numbers of both staves in the <att>staff</att>
              attribute. Note that both <att>place</att> and <att>layer</att> are not allowed with
              there are multiple values in <att>staff</att>.</p>
          </div>
          <div>
            <head>Slurs and Hairpins</head>
            <p> Start and end values for slurs and hairpins must be expressed using
                <att>tstamp</att> and <att>tstamp2</att> pairs. The location of these events must
              always be expressed using <att>staff</att>. If <att>staff</att> refers to a single
              staff, an additional <att>layer</att> attribute is required. </p>
            <p>The beginning and end of these events can also be more precisely defined using
                <att>startid</att> and <att>endid</att> pairs. This is not required, but can be
              particularly useful for events stopping at an event without beat (e.g. during a
              cadenza), or for complex slurs spanning multiple staves. </p>
            <p>This is a typical slur: </p>
            <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" tido:wrapper="afterStaff">
              <slur xml:id="d014" layer="1" staff="1" tstamp="1" tstamp2="0m+2"/>
            </egXML>
            <p>Partial slurs (as they appear, for example, in <gi>ending</gi> elements) need to be
              encoded using the <att>tstamp</att> and <att>tstamp2</att> attributes. An incomplete
              start of a partial slur gets encoded with <code>@tstamp="0"</code>, an incomplete end
              with <code>@tstamp2="0m+n"</code> (where n is the meter.count of the current measure
              plus one: 5 in 4/4, 3 in 2/4 etc.). All partial slurs need to be supplied with a
                <att>curvedir</att> attribute indicating the direction of the slur (values: "above"
              or "below").</p>
          </div>
          <div>
            <head>Pedals</head>
            <p> The form of pedal marks indicating to depress and release must be consistent. </p>
            <p>Here is an example:</p>
            <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" tido:wrapper="afterStaff">
              <pedal dir="down" tstamp="1" form="line" xml:id="d015"/>
              <pedal dir="bounce" tstamp="1" form="line" xml:id="d016"/>
              <pedal dir="up" tstamp="2" form="line" xml:id="d017"/>
            </egXML>
            <p>When necessary, additional styling information can be provided by the Tido
              stylesheets. For example, for instructional purposes the editor may decide that the up
              and down movements should be represented as arrows, this styling will be provided by
              the stylesheet.</p>
          </div>
        </div>
      </div>
      <div>
        <head>Ornamentation</head>
        <p>MEI uses three main classes of ornaments: trill, turn, and mordent. Complex ornaments can
          be encoded by combining these classes. Moreover, many ornaments with the same expansion
          may have different symbols. MEI prioritizes encoding the meaning of the ornament and not
          its symbol, but symbols can be defined and mapped to the encoding.</p>
        <p>This section offers encoding examples for every ornament in the SMuFL standard, excluding
          acciaccatura and appoggiatura, which are encoded with <gi>note</gi>. This is only meant to
          show typical encoding of these symbols in Tido; each symbol may in fact correspond to any
          number of encodings because these are symbols with a rich history that defies
          standardization.</p>
        <p>First, these are all the SMuFL ornament symbols declared as user symbols in an
          hypothetical score definition:</p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="feasible">
          <scoreDef>
            <symbolTable>
              <symbolDef xml:id="ornamentTrill">
                <anchoredText><![CDATA[&#xE566;]]></anchoredText>
              </symbolDef>
              <symbolDef xml:id="ornamentTurn">
                <anchoredText><![CDATA[&#xE567;]]></anchoredText>
              </symbolDef>
              <symbolDef xml:id="ornamentTurnSlash">
                <anchoredText><![CDATA[&#xE569;]]></anchoredText>
              </symbolDef>
              <symbolDef xml:id="ornamentMordent">
                <anchoredText><![CDATA[&#xE56C;]]></anchoredText>
              </symbolDef>
              <symbolDef xml:id="ornamentMordentInverted">
                <!-- The use of an "inverted" symbol for "normal" form complies with the fact the use of these symbols is inconsistent: this suser defined symbols allows us to associate a rendition with a specific meaning -->
                <anchoredText><![CDATA[&#xE56D;]]></anchoredText>
              </symbolDef>
              <symbolDef xml:id="ornamentTremblement">
                <anchoredText><![CDATA[&#xE56E;]]></anchoredText>
              </symbolDef>
              <symbolDef xml:id="ornamentHaydn">
                <anchoredText><![CDATA[&#xE56F;]]></anchoredText>
              </symbolDef>
            </symbolTable>
            <staffGrp>
              <staffDef n="1" lines="5">
                <clef shape="G" line="2"/>
              </staffDef>
            </staffGrp>
          </scoreDef>
        </egXML>
        <p>Expansions. Expansions of ornaments must be encoded in the event stream of the score
          using a <gi>choice</gi> element which contains the original notation wrapped in an
            <gi>orig</gi> and the expanded version wrapped in a <gi>reg</gi> element. The
          corresponding ornament must be encoded likewise, with <gi>choice</gi> wrapping an
            <gi>orig</gi> element containing the ornament and an empty <gi>reg</gi> element.</p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" tido:wrapper="inSection">
          <measure n="22" xml:id="d018">
            <staff n="1" xml:id="d019">
              <layer n="1" xml:id="d020">
                <choice xml:id="d021">
                  <orig xml:id="d022">
                    <note dur="4" oct="5" pname="c" stem.dir="down" xml:id="d023"/>
                  </orig>
                  <reg xml:id="d024">
                    <note dur="32" oct="5" pname="d" xml:id="d025"/>
                    <note dur="32" oct="5" pname="c" xml:id="d026"/>
                    <note dur="32" oct="5" pname="d" xml:id="d027"/>
                    <note dur="32" oct="5" pname="c" xml:id="d028"/>
                    <note dur="32" oct="5" pname="d" xml:id="d029"/>
                    <note dots="1" dur="16" oct="5" pname="c" xml:id="d030"/>
                  </reg>
                </choice>
              </layer>
            </staff>
            <choice xml:id="d031">
              <orig xml:id="d032">
                <trill place="above" staff="1" tstamp="1" xml:id="d033"/>
              </orig>
              <reg xml:id="d034"/>
            </choice>
          </measure>
        </egXML>
        <p>Trill. In MEI trills are agnostic about the starting note (i.e. written or
          ornamenting).</p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" tido:wrapper="afterStaff">
          <trill tstamp="1" altsym="#ornamentTrill" xml:id="d035"/>
        </egXML>
        <p>Turn. Begins on the note above the written note.</p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" tido:wrapper="afterStaff">
          <turn form="norm" tstamp="1" altsym="#ornamentTurn" xml:id="d036"/>
        </egXML>
        <p>Turn with slash. Begins on the note below the written note. </p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" tido:wrapper="afterStaff">
          <turn form="inv" tstamp="1" altsym="#ornamentTurnSlash" xml:id="d037"/>
        </egXML>
        <p>Mordent. Performed as the written note, followed by its lower neighbor, with a return to
          the written note. </p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" tido:wrapper="afterStaff">
          <mordent form="norm" tstamp="1" altsym="#ornamentMordent" xml:id="d038"/>
        </egXML>
        <p>Inverted mordent. Performed as the principal note, followed by its upper neighbor, with a
          return to the principal note. </p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" tido:wrapper="afterStaff">
          <mordent form="inv" tstamp="1" altsym="#ornamentMordentInverted" xml:id="d039"/>
        </egXML>
        <p>Tremblement. Equivalent to a trill. </p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" tido:wrapper="afterStaff">
          <trill tstamp="1" altsym="#ornamentTremblement" xml:id="d040"/>
        </egXML>
        <p>Haydn ornament. Same as inverted mordent. </p>
        <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" tido:wrapper="afterStaff">
          <mordent form="inv" tstamp="1" altsym="#ornamentMordentInverted" xml:id="d041"/>
        </egXML>
      </div>
      <div>
        <head>Use of color for content creation</head>
        <p>Generally, content creation for tido begins with notation software, such as Sibelius. A
          first export to MEI aims to reproduce closely the score. Further MEI to MEI
          transformations may be needed to enrich the encoding.</p>
        <p> To facilitate this process, components of a score can be colored in the notation
          software to indicate that they need to be transformed into more semantic MEI elements
          after the first export. For example, a set of bowings could be colored to indicate that
          they are an alternative to the default bowing marks. The first export will only reproduce
          the bowings with the color information, while a further transformation would convert it
          into a more descriptive "layer". </p>
        <p>To store this temporary color information, the tido.sibelius customization introduces a
          subclass of the color attribute under tido's namespace. It can be used on every element
          that can use MEI's default <att>color</att> attribute class, plus <gi>dir</gi>,
            <gi>dynam</gi>, <gi>octave</gi>, <gi>staffDef</gi>, and <gi>tempo</gi>.</p>
      </div>
    </body>
    <back>
      <div xml:id="tidoSchemaSpec">
        <head>Specifications</head>
        <!-- Schema specification for TIDO MEI files -->
        <schemaSpec ident="tido" ns="http://www.music-encoding.org/ns/mei"
          start="mei music body mdiv" prefix="tido_">
          <specGrpRef target="#tidoCommonGrp"/>
          <specGrpRef target="#tidoStrictGrp"/>
        </schemaSpec>
        <!-- Schema specification for MEI files output by the Sibelius Converter to prepare 'golden' MEI -->
        <schemaSpec ident="tido.sibelius" ns="http://www.music-encoding.org/ns/mei"
          start="mei music body mdiv" prefix="tido_">
          <specGrpRef target="#tidoCommonGrp"/>
          <specGrpRef target="#tidoSibeliusGrp"/>
        </schemaSpec>
        <specGrp xml:id="tidoStrictGrp">
          <!-- the scope of elements reflects the usage of elements in our latest test files, with 2 exceptions: the schema permits <space> and <pedal> elements to be implemented soon -->
          <moduleRef key="MEI"/>
          <moduleRef key="MEI.shared"
            except=" actor annot arranger artic author barLine bibl biblList biblScope caption
            castGrp castItem castList clefGrp composer creation custos date depth dir distributor
            div dot edition editor ending event eventList expansion extent funder genre group grpSym
            head height identifier imprint incip keyAccid label layerDef lb librettist lyricist name
            num pad part parts pb pgDesc pgFoot pgFoot2 pgHead pgHead2 phrase physLoc publisher
            pubPlace recipient relatedItem repository resp role roleDesc sb series sponsor stack
            tempo textLang titlePage width"/>
          <moduleRef key="MEI.header"
            except=" accessRestrict acqSource altId appInfo application audience byline captureMode
            carrierForm change changeDesc classCode classification condition contentItem contents
            context correction dimensions editionStmt editorialDecl exhibHist fileChar fingerprint
            hand handList history incipCode incipText inscription interpretation key language langUsage
            mensuration meter normalization notesStmt otherChar perfDuration perfMedium perfRes
            perfResList physDesc physMedium plateNum playingSpeed price provenance revisionDesc
            samplingDecl scoreFormat segmentation soundChan source sourceDesc specRepro stdVals
            sysReq term termList trackConfig treatHist treatSched unpub watermark work workDesc"/>
          <moduleRef key="MEI.cmn"
            except=" arpeg beamSpan beatRpt bend breath bTrem fermata fTrem gliss halfmRpt harpPedal
            meterSigGrp mRpt mRpt2 mSpace multiRest multiRpt octave ossia reh tuplet tupletSpan"/>
          <moduleRef key="MEI.cmnOrnaments"/>
          <moduleRef key="MEI.critapp" except="app lem rdg"/>
          <moduleRef key="MEI.edittrans"
            except=" abbr add corr damage del expan gap handShift restore sic subst supplied unclear"/>
          <moduleRef key="MEI.externalsymbols"/>
          <moduleRef key="MEI.fingering"/>
          <moduleRef key="MEI.lyrics" except="lyrics"/>
          <moduleRef key="MEI.namesdates" except="geogName periodName persName styleName"/>
          <moduleRef key="MEI.ptrref" except="ptr ref"/>
          <moduleRef key="MEI.text" except="back front l lg li list quote"/>
          <moduleRef key="MEI.usersymbols"
            except="anchoredText curve line mapping propName propValue symbolDef symName symProp symbolTable"/>
          <classSpec ident="att.notationtype" module="MEI" type="atts" mode="delete"/>
          <classSpec ident="att.accid.anl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.accid.ges" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.accid.log" module="MEI.shared" type="atts" mode="change">
            <classes mode="change">
              <memberOf key="att.controlevent" mode="delete"/>
            </classes>
            <attList>
              <attDef ident="func" usage="opt" mode="delete"/>
            </attList>
          </classSpec>
          <classSpec ident="att.accid.vis" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.altsym" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.articulation.performed" module="MEI.shared" type="atts"
            mode="delete"/>
          <classSpec ident="att.authorized" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.barplacement" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.bibl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.canonical" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.chord.anl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.chord.ges" module="MEI.shared" type="atts" mode="delete"/>
          <!-- <classSpec ident="att.chord.vis" module="MEI.shared" type="atts" mode="delete"/> -->
          <classSpec ident="att.clef.anl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.clef.ges" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.clef.log" module="MEI.shared" type="atts" mode="change">
            <attList>
              <attDef ident="cautionary" usage="opt" mode="delete"/>
            </attList>
          </classSpec>
          <classSpec ident="att.clef.vis" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.cleffing.log" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.cleffing.vis" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.color" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.coloration" module="MEI.shared" type="atts" mode="delete"/>

          <classSpec ident="att.common" module="MEI.shared" type="atts" mode="change">
            <attList>
              <attDef ident="n" usage="opt" mode="delete"/>
            </attList>
          </classSpec>
          <classSpec ident="att.commonPart" module="MEI.shared" type="atts" mode="change">
            <attList>
              <attDef ident="xml:base" usage="opt" mode="delete"/>
              <attDef ident="label" usage="opt" mode="delete"/>
            </attList>
          </classSpec>
          <classSpec ident="att.curvature" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.curverend" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.datable" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.datapointing" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.declaring" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.distances" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.duration.additive" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.duration.default" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.duration.performed" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.dynam.anl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.dynam.ges" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.enclosingchars" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.endings" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.extender" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.fermatapresent" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.filing" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.horizontalalign" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.id" module="MEI.shared" type="atts" mode="change">
            <attList>
              <attDef ident="xml:id" usage="req" mode="change">
                <datatype>
                  <rng:data type="ID"/>
                </datatype>
              </attDef>
            </attList>
          </classSpec>
          <classSpec ident="att.instrumentident" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.joined" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.keySig.anl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.keySig.ges" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.keySig.vis" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.keySigDefault.log" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.keySigDefault.vis" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.labels.addl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.lang" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.layer.anl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.layer.ges" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.layer.log" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.layer.vis" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.linerend" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.linerend.base" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.lyricstyle" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.measure.anl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.measure.ges" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.measurement" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.measurenumbers" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.meterSig.anl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.meterSig.ges" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.meterSig.vis" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.meterSigDefault.log" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.meterSigDefault.vis" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.meterconformance" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.meterconformance.bar" module="MEI.shared" type="atts" mode="change">
            <attList>
              <attDef ident="control" usage="opt" mode="delete"/>
            </attList>
          </classSpec>
          <classSpec ident="att.mmtempo" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.multinummeasures" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.notationstyle" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.note.anl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.note.ges" module="MEI.shared" type="atts" mode="change">
            <classes mode="change">
              <memberOf key="att.articulation.performed" mode="delete"/>
              <memberOf key="att.duration.performed" mode="delete"/>
              <memberOf key="att.instrumentident" mode="delete"/>
              <memberOf key="att.midivelocity" mode="delete"/>
              <memberOf key="att.note.ges.mensural" mode="delete"/>
              <memberOf key="att.note.ges.tablature" mode="delete"/>
            </classes>
            <attList>
              <attDef ident="oct.ges" usage="opt" mode="delete"/>
              <attDef ident="pname.ges" usage="opt" mode="delete"/>
              <attDef ident="pnum" usage="opt" mode="delete"/>
            </attList>
          </classSpec>
          <!-- <classSpec ident="att.note.vis" module="MEI.shared" type="atts" mode="delete"/> -->
          <classSpec ident="att.noteheads" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.octavedefault" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.octavedisplacement" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.onelinestaff" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.optimization" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.ornam.anl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.ornam.ges" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.pages" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.plist" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.pointing" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.relativesize" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.responsibility" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.rest.anl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.rest.ges" module="MEI.shared" type="atts" mode="delete"/>
          <!-- <classSpec ident="att.rest.vis" module="MEI.shared" type="atts" mode="delete"/> -->
          <classSpec ident="att.scalable" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.score.anl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.score.ges" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.score.log" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.score.vis" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.scoreDef.anl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.scoreDef.ges" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.scoreDef.log" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.scoreDef.log.mensural" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.scoreDef.vis" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.section.anl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.section.ges" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.section.log" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.section.vis" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.slurpresent" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.space.anl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.space.ges" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.space.vis" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.spacing" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.staff.anl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.staff.ges" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.staff.log" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.staff.vis" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.staffDef.anl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.staffDef.ges" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.staffDef.log" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.staffDef.vis" module="MEI.shared" type="atts" mode="change">
            <attList>
              <attDef ident="grid.show" usage="opt" mode="delete"/>
              <attDef ident="layerscheme" usage="opt" mode="delete"/>
              <attDef ident="lines.color" usage="opt" mode="delete"/>
              <attDef ident="lines.visible" usage="opt" mode="delete"/>
              <attDef ident="spacing" usage="opt" mode="delete"/>
            </attList>
          </classSpec>
          <classSpec ident="att.staffGrp.anl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.staffGrp.ges" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.staffGrp.log" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.staffGrp.vis" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.staffloc.pitched" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.stems" module="MEI.shared" type="atts" mode="change">
            <attList>
              <attDef ident="stem.len" usage="opt" mode="delete"/>
              <attDef ident="stem.mod" usage="opt" mode="delete"/>
              <attDef ident="stem.pos" usage="opt" mode="delete"/>
              <attDef ident="stem.x" usage="opt" mode="delete"/>
              <attDef ident="stem.y" usage="opt" mode="delete"/>
            </attList>
          </classSpec>
          <classSpec ident="att.syl.anl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.syl.ges" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.syltext" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.systems" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.textstyle" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.tiepresent" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.timestamp.performed" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.transposition" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.tupletpresent" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.visibility" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.visualoffset" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.visualoffset.ho" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.visualoffset.to" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.visualoffset.vo" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.visualoffset2" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.visualoffset2.ho" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.visualoffset2.to" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.visualoffset2.vo" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.whitespace" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.width" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.xy" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.xy2" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.beam.anl" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.beam.ges" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.beam.log" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.beam.vis" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.beamed" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.beamedwith" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.beaming.log" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.beaming.vis" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.beamrend" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.beamsecondary" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.chord.log.cmn" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.chord.vis.cmn" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.graced" module="MEI.cmn" type="atts" mode="change">
            <attList>
              <attDef ident="grace.time" usage="opt" mode="delete"/>
            </attList>
          </classSpec>
          <classSpec ident="att.hairpin.anl" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.hairpin.ges" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.hairpin.vis" module="MEI.cmn" type="atts" mode="change">
            <classes mode="change">
              <memberOf key="att.color" mode="delete"/>
              <memberOf key="att.linerend.base" mode="delete"/>
              <memberOf key="att.visualoffset" mode="delete"/>
              <memberOf key="att.visualoffset2" mode="delete"/>
              <memberOf key="att.xy" mode="delete"/>
              <memberOf key="att.xy2" mode="delete"/>
            </classes>
            <attList>
              <attDef ident="opening" usage="opt" mode="delete"/>
            </attList>
          </classSpec>
          <classSpec ident="att.lvpresent" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.measure.vis" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.note.ges.cmn" module="MEI.cmn" type="atts" mode="change">
            <attList>
              <attDef ident="gliss" usage="opt" mode="delete"/>
            </attList>
          </classSpec>
          <classSpec ident="att.note.log.cmn" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.note.vis.cmn" module="MEI.cmn" type="atts" mode="change"/>
          <classSpec ident="att.pedal.anl" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.pedal.ges" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.pianopedals" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.rehearsal" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.rest.log.cmn" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.rest.vis.cmn" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.scoreDef.log.cmn" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.scoreDef.vis.cmn" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.slur.anl" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.slur.ges" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.slur.vis" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.slurrend" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.space.log.cmn" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.staffDef.log.cmn" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.staffDef.vis.cmn" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.stems.cmn" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.tie.anl" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.tie.ges" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.tie.vis" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.tierend" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.mordent.anl" module="MEI.cmnOrnaments" type="atts" mode="delete"/>
          <classSpec ident="att.mordent.ges" module="MEI.cmnOrnaments" type="atts" mode="delete"/>
          <classSpec ident="att.ornam" module="MEI.cmnOrnaments" type="atts" mode="delete"/>
          <classSpec ident="att.ornamentaccid" module="MEI.cmnOrnaments" type="atts" mode="delete"/>
          <classSpec ident="att.trill.anl" module="MEI.cmnOrnaments" type="atts" mode="delete"/>
          <classSpec ident="att.trill.ges" module="MEI.cmnOrnaments" type="atts" mode="delete"/>
          <classSpec ident="att.turn.anl" module="MEI.cmnOrnaments" type="atts" mode="delete"/>
          <classSpec ident="att.turn.ges" module="MEI.cmnOrnaments" type="atts" mode="delete"/>
          <classSpec ident="att.source" module="MEI.critapp" type="atts" mode="delete"/>
          <classSpec ident="att.edit" module="MEI.edittrans" type="atts" mode="delete"/>
          <classSpec ident="att.evidence" module="MEI.edittrans" type="atts" mode="delete"/>
          <classSpec ident="att.extsym" module="MEI.externalsymbols" type="atts" mode="delete"/>
          <classSpec ident="att.fing.anl" module="MEI.fingering" type="atts" mode="delete"/>
          <classSpec ident="att.fing.ges" module="MEI.fingering" type="atts" mode="delete"/>
          <classSpec ident="att.fingGrp.anl" module="MEI.fingering" type="atts" mode="delete"/>
          <classSpec ident="att.fingGrp.ges" module="MEI.fingering" type="atts" mode="delete"/>
          <classSpec ident="att.fingGrp.vis" module="MEI.fingering" type="atts" mode="change">
            <classes mode="change">
              <memberOf key="att.altsym" mode="delete"/>
              <memberOf key="att.extender" mode="delete"/>
              <memberOf key="att.visualoffset" mode="delete"/>
              <memberOf key="att.xy" mode="delete"/>
            </classes>
            <attList>
              <attDef ident="orient" usage="opt" mode="delete"/>
            </attList>
          </classSpec>
          <classSpec ident="att.verse.anl" module="MEI.lyrics" type="atts" mode="delete"/>
          <classSpec ident="att.verse.ges" module="MEI.lyrics" type="atts" mode="delete"/>
          <classSpec ident="att.verse.log" module="MEI.lyrics" type="atts" mode="delete"/>
          <classSpec ident="att.verse.vis" module="MEI.lyrics" type="atts" mode="delete"/>
          <classSpec ident="att.enumeration" module="MEI.shared" type="atts" mode="add">
            <attList>
              <attDef ident="n" usage="opt">
                <desc>Provides a number-like designation for an element.</desc>
                <datatype>
                  <rng:ref name="token"/>
                </datatype>
              </attDef>
            </attList>
          </classSpec>
          <classSpec ident="att.label" module="MEI.shared" type="atts" mode="add">
            <attList>
              <attDef ident="label" usage="opt">
                <desc>Provides a name or label for an element. The value may be any string.</desc>
                <datatype>
                  <rng:data type="string"/>
                </datatype>
              </attDef>
            </attList>
          </classSpec>
          <elementSpec ident="measure" module="MEI.cmn" mode="change">
            <classes mode="change">
              <memberOf key="att.enumeration"/>
            </classes>
          </elementSpec>
          <elementSpec ident="scoreDef" module="MEI.shared" mode="change">
            <content>
              <rng:choice>
                <rng:optional>
                  <rng:ref name="model.staffGrpLike"/>
                </rng:optional>
              </rng:choice>
            </content>
          </elementSpec>
          <elementSpec ident="verse" module="MEI.lyrics" mode="change">
            <classes mode="change">
              <memberOf key="att.label" mode="add"/>
            </classes>
            <attList>
              <attDef ident="n" usage="req">
                <desc>provides a name or number designation for an element. While the value need not
                  be unique, it is required to be a single token. Must be an integer.</desc>
                <datatype>
                  <rng:data type="positiveInteger"/>
                </datatype>
              </attDef>
            </attList>
          </elementSpec>
          <!-- we need to override the content model of macro.availabilityPart to avoid a schema error resulting from a bug in the TEI-C schema transformation -->
          <macroSpec ident="macro.availabilityPart" module="MEI.header" type="pe" mode="change">
            <content>
              <rng:optional>
                <rng:ref name="useRestrict"/>
              </rng:optional>
            </content>
          </macroSpec>
        </specGrp>
        <specGrp xml:id="tidoSibeliusGrp">
          <moduleRef key="MEI"/>
          <moduleRef key="MEI.shared" except="clefGrp layerDef"/>
          <moduleRef key="MEI.header"/>
          <moduleRef key="MEI.cmn" except="meterSigGrp"/>
          <moduleRef key="MEI.cmnOrnaments"/>
          <moduleRef key="MEI.critapp"/>
          <moduleRef key="MEI.edittrans"/>
          <moduleRef key="MEI.externalsymbols"/>
          <moduleRef key="MEI.fingering"/>
          <moduleRef key="MEI.lyrics"/>
          <moduleRef key="MEI.namesdates"/>
          <moduleRef key="MEI.ptrref"/>
          <moduleRef key="MEI.text"/>
          <moduleRef key="MEI.usersymbols" include="symbol"/>
          <!-- === TIDO:COLOR === -->
          <classSpec ident="att.tido.color" type="atts" mode="add">
            <desc>Color attributes to facilitate the content creation workflow for tido. See <ref
                target="https://github.com/tido/MEIConverter/issues/5">
                https://github.com/tido/MEIConverter/issues/5 discussion on GitHub</ref>
            </desc>
            <attList>
              <attDef ident="color" ns="http://tido-music.com/ns/1.0" mode="add">
                <desc>records color information as required by content creation workflow for tido.
                  Further processing should transform this information into Critical Apparatus,
                  Editorial Markup or other standard MEI. See discussion: <ref
                    target="https://github.com/tido/MEIConverter/issues/5">
                    https://github.com/tido/MEIConverter/issues/5 </ref>
                </desc>
                <datatype>
                  <rng:ref name="data.COLOR"/>
                </datatype>
              </attDef>
            </attList>
          </classSpec>
          <classSpec ident="att.staffDef.vis.cmn" module="MEI.cmn" type="atts" mode="change">
            <classes mode="change">
              <memberOf key="att.tido.color" mode="add"/>
            </classes>
            <exemplum>
              <p>Valid usage of <att>tido:color</att> on <gi>staffDef</gi></p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" tido:wrapper="inMeasure">
                <staffDef tido:color="#FF0000" lines="5" n="1" xml:id="d042"/>
              </egXML>
            </exemplum>
          </classSpec>
          <classSpec ident="att.color" module="MEI.shared" type="atts" mode="change">
            <desc>Visual color attributes.</desc>
            <classes mode="change">
              <memberOf key="att.tido.color"/>
            </classes>
            <exemplum>
              <p>Valid usage of <att>tido:color</att> on <gi>note</gi> and <gi>rest</gi> elements</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" tido:wrapper="inLayer">
                <note pname="a" oct="4" dur="4" color="red" tido:color="#FF0000" xml:id="d043"/>
                <rest dur="1" color="red" tido:color="#FF0000" xml:id="d044"/>
              </egXML>
            </exemplum>
          </classSpec>
          <elementSpec ident="dir" module="MEI.shared" mode="change">
            <classes mode="change">
              <memberOf key="att.tido.color" mode="add"/>
            </classes>
            <exemplum>
              <p>Valid usage of <att>tido:color</att> on a <gi>dir</gi> element</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" tido:wrapper="afterStaff">
                <dir tido:color="red" tstamp="1" xml:id="d045"/>
              </egXML>
            </exemplum>
          </elementSpec>
          <elementSpec ident="dynam" module="MEI.shared" mode="change">
            <classes mode="change">
              <memberOf key="att.tido.color" mode="add"/>
            </classes>
            <exemplum>
              <p>Valid usage of <att>tido:color</att> on a <gi>dynam</gi> element</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" tido:wrapper="afterStaff">
                <dynam tido:color="blue" tstamp="1" xml:id="d046"/>
              </egXML>
            </exemplum>
          </elementSpec>
          <elementSpec ident="tempo" module="MEI.shared" mode="change">
            <classes mode="change">
              <memberOf key="att.tido.color" mode="add"/>
            </classes>
            <exemplum>
              <p>Valid usage of <att>tido:color</att> on a <gi>tempo</gi> element</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" tido:wrapper="afterStaff">
                <tempo tido:color="blue" tstamp="1" xml:id="d047"/>
              </egXML>
            </exemplum>
          </elementSpec>
          <elementSpec ident="octave" module="MEI.cmn" mode="change">
            <exemplum>
              <p>Valid usage of <att>tido:color</att> on an <gi>octave</gi> element</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" tido:wrapper="afterStaff">
                <octave tido:color="blue" tstamp="1" dur="1" xml:id="d048"/>
              </egXML>
            </exemplum>
          </elementSpec>
        </specGrp>
        <specGrp xml:id="tidoCommonGrp">
          <constraintSpec ident="set_ns" scheme="isoschematron">
            <constraint>
              <sch:ns xmlns:sch="http://purl.oclc.org/dsdl/schematron" prefix="mei"
                uri="http://www.music-encoding.org/ns/mei"/>
            </constraint>
          </constraintSpec>
          <classSpec ident="model.scorePart.mensuralAndNeumes" module="MEI.shared" type="model"
            mode="replace"/>
          <classSpec ident="model.sectionPart.mensuralAndNeumes" module="MEI.shared" type="model"
            mode="replace"/>
          <classSpec ident="model.staffPart.mensuralAndNeumes" module="MEI.shared" type="model"
            mode="replace"/>
          <classSpec ident="model.layerPart.mensuralAndNeumes" module="MEI.shared" type="model"
            mode="replace"/>
          <classSpec ident="att.startendid" module="MEI.shared" type="atts" mode="change">
            <attList>
              <attDef ident="endid" usage="opt" mode="change">
                <datatype>
                  <rng:ref name="data.URI.local"/>
                </datatype>
              </attDef>
            </attList>
            <exemplum>
              <p>A valid <gi>pedal</gi> element with local URI references in <att>startid</att> and
                  <att>endid</att></p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" tido:wrapper="afterStaff">
                <pedal dir="down" staff="1" layer="1" startid="#n01" endid="#n02" xml:id="d049"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>pedal</gi> element with local URI references lacking the hash sign
                in <att>startid</att> and <att>endid</att></p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                tido:wrapper="afterStaff">
                <pedal dir="down" staff="1" layer="1" startid="n01" endid="n02" xml:id="d050"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>pedal</gi> element with absolute URI references in
                  <att>startid</att> and <att>endid</att></p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                tido:wrapper="afterStaff">
                <pedal xml:id="d051" dir="down" staff="1" layer="1"
                  startid="http://google.com#start" endid="http://google.com#end"/>
              </egXML>
            </exemplum>
          </classSpec>
          <classSpec ident="att.startid" module="MEI.shared" type="atts" mode="change">
            <attList>
              <attDef ident="startid" usage="opt" mode="change">
                <datatype>
                  <rng:ref name="data.URI.local"/>
                </datatype>
              </attDef>
            </attList>
          </classSpec>
          <!-- extend att.ornam.vis with att.ornam.altsym -->
          <classSpec ident="att.ornam.vis" module="MEI.shared" type="atts" mode="change">
            <desc>Visual domain attributes.</desc>
            <classes mode="change">
              <memberOf key="att.altsym" mode="delete"/>
              <memberOf key="att.ornam.altsym" mode="add"/>
            </classes>
          </classSpec>
          <!-- require clef/@shape -->
          <classSpec ident="att.clefshape" module="MEI.shared" type="atts" mode="change">
            <attList>
              <attDef ident="shape" usage="req" mode="change">
                <datatype>
                  <rng:ref name="data.CLEFSHAPE"/>
                </datatype>
              </attDef>
            </attList>
          </classSpec>
          <!-- require clef/@line -->
          <classSpec ident="att.lineloc" module="MEI.shared" type="atts" mode="change">
            <attList>
              <attDef ident="line" usage="req" mode="change">
                <datatype>
                  <rng:ref name="data.CLEFLINE"/>
                </datatype>
              </attDef>
            </attList>
          </classSpec>
          <!-- === CUSTOM DATATYPES === -->
          <macroSpec ident="data.URI.local" module="MEI" type="dt" mode="add">
            <desc>A local URI starting with #</desc>
            <content>
              <rng:data type="token">
                <rng:param name="pattern">#[A-Za-z][A-Za-z0-9\-_:\.]*</rng:param>
              </rng:data>
            </content>
          </macroSpec>
          <macroSpec ident="data.MEASUREBEAT.strict" module="MEI" type="dt" mode="add">
            <desc>A count of measures plus a beat location, i.e., [0-9]+m\+[0-9]+(\.?[0-9]*)?. The
              measure count is the number of barlines crossed by the event, while the beat location
              is a timestamp in the measure where the event ends. For example, dur="1m + 3"
              indicates that the event ends in the next measure on beat 3. The measure number must
              be in the range of 0 to the number of remaining measures and the beat number must be
              in the range from 0 to the numerator of the time signature plus 1. For example, for an
              event starting in the first measure of a piece containing 6 measures in 6/8, the
              measure number must be between 0 to 5 and the beat number must be within the range
              from 0 to 7, e.g., "4m+3". Tido makes the measure value mandatory and removes optional
              spaces.</desc>
            <content>
              <rng:data type="token">
                <rng:param name="pattern">[0-9]+m\+[0-9]+(\.?[0-9]*)?</rng:param>
              </rng:data>
            </content>
          </macroSpec>
          <!-- === NEW ATTRIBUTE CLASSES === -->
          <!-- New attribute class for required @dur -->
          <classSpec ident="att.duration.musical.req" module="MEI.shared" type="atts" mode="add">
            <desc>Required attributes that express duration in musical terms.</desc>
            <attList>
              <attDef ident="dur" usage="req">
                <desc>records the duration of a feature using the relative durational values
                  provided by the data.DURATION datatype.</desc>
                <datatype>
                  <rng:ref name="data.DURATION"/>
                </datatype>
              </attDef>
            </attList>
          </classSpec>
          <!-- New attribute class for required @tstamp -->
          <classSpec ident="att.timestamp.musical.req" module="MEI.shared" type="atts" mode="add">
            <desc>Required attributes that record a time stamp in terms of musical time, i.e.,
              beats[.fractional beat part].</desc>
            <attList>
              <attDef ident="tstamp" usage="req">
                <desc>encodes the onset time in terms of musical time, i.e.,
                  beats[.fractional_beat_part].</desc>
                <datatype>
                  <rng:ref name="data.BEAT"/>
                </datatype>
              </attDef>
            </attList>
          </classSpec>
          <!-- New attribute class for mandatory @tstamp2 -->
          <classSpec ident="att.timestamp2.musical.req" module="MEI.shared" type="atts" mode="add">
            <desc>Required attributes that record a time stamp for the end of an event in terms of
              musical time.</desc>
            <attList>
              <attDef ident="tstamp2" usage="req">
                <desc>encodes the ending point of an event in terms of musical time, i.e., a count
                  of measures plus a beat location.</desc>
                <datatype>
                  <rng:ref name="data.MEASUREBEAT.strict"/>
                </datatype>
              </attDef>
            </attList>
          </classSpec>
          <!-- New attribute class for altsym attributes on ornaments -->
          <classSpec ident="att.ornam.altsym" module="MEI.shared" type="atts" mode="add">
            <desc>Attributes supplying pointers to user-defined symbols.</desc>
            <attList>
              <attDef ident="altsym" usage="opt">
                <desc>provides a way of pointing to an ornament symbol. It must contain an ID of a
                  &lt;symbolDef&gt; element in Tido's ornament symbol table.</desc>
                <valList type="closed">
                  <valItem ident="#ornamentMordent">
                    <desc>Inverted mordent (Tido default symbol for mordent[@inv='true']).</desc>
                  </valItem>
                  <valItem ident="#ornamentMordentInverted">
                    <desc>Mordent (Tido default symbol for mordent[not(@inv='true')]).</desc>
                  </valItem>
                  <valItem ident="#ornamentTurn">
                    <desc>Turn (Tido default symbol for turn[not(@inv='true')]).</desc>
                  </valItem>
                  <valItem ident="#ornamentTurnSlash">
                    <desc>Turn with slash (Tido default symbol for turn[@inv='true']).</desc>
                  </valItem>
                  <valItem ident="#ornamentTrill">
                    <desc>Trill.</desc>
                  </valItem>
                  <valItem ident="#ornamentPrecompSlideTrillDAnglebert">
                    <desc>Slide trill (D'Anglebert).</desc>
                  </valItem>
                  <valItem ident="#ornamentPrecompMordentUpperPrefix">
                    <desc>Mordent with upper prefix.</desc>
                  </valItem>
                  <valItem ident="#ornamentPrecompTrillSuffixDandrieu">
                    <desc>Trill with suffix (Dandrieu).</desc>
                  </valItem>
                  <valItem ident="#ornamentPrecompTrillLowerSuffix">
                    <desc>Trill with lower suffix.</desc>
                  </valItem>
                  <valItem ident="#ornamentPrecompPortDeVoixMordent">
                    <desc>Port de voix mordent.</desc>
                  </valItem>
                  <valItem ident="#ornamentPrecompInvertedMordentUpperPrefix">
                    <desc>Inverted mordent with upper prefix.</desc>
                  </valItem>
                  <valItem ident="#ornamentPrecompAppoggTrill">
                    <desc>Appogiatura trill.</desc>
                  </valItem>
                  <valItem ident="#ornamentTremblement">
                    <desc>Tremblement (Tido default symbol for mordent[@long='true']).</desc>
                  </valItem>
                </valList>
              </attDef>
            </attList>
          </classSpec>
          <!-- === COMMON ATTRIBUTES === -->
          <classSpec ident="att.controlevent" module="MEI.shared" type="atts" mode="change">
            <constraintSpec ident="no_layer_with_multivalue_staff" scheme="isoschematron" mode="add">
              <desc>Prohibit <att>layer</att> when <att>staff</att> has multiple values.</desc>
              <constraint>
                <sch:rule context="mei:*[@staff]">
                  <sch:assert test="if (contains(@staff, ' ') and @layer) then false() else true()"
                    >@layer must be absent when @staff contains multiple values.</sch:assert>
                </sch:rule>
              </constraint>
            </constraintSpec>
            <constraintSpec ident="no_place_with_multivalue_staff" scheme="isoschematron" mode="add">
              <desc>Prohibit <att>place</att> when <att>staff</att> has multiple values.</desc>
              <constraint>
                <sch:rule context="mei:*[@staff]">
                  <sch:assert test="if (contains(@staff, ' ') and @place) then false() else true()"
                    >@place must be absent when @staff contains multiple values.</sch:assert>
                </sch:rule>
              </constraint>
            </constraintSpec>
          </classSpec>
          <classSpec ident="att.controlevent.strict" module="MEI.shared" type="atts" mode="add">
            <desc>Attributes shared by events which rely on other events for their existence. For
              example, a slur/phrase marking must be drawn between or over a group of notes. The
              slur is therefore a control event.</desc>
            <classes>
              <memberOf key="att.plist"/>
              <memberOf key="att.timestamp.musical.req"/>
              <memberOf key="att.timestamp.performed"/>
              <memberOf key="att.staffident.req"/>
              <memberOf key="att.layerident"/>
            </classes>
            <constraintSpec ident="require_layer_when_staff_is_not_multivalued"
              scheme="isoschematron" mode="add">
              <desc>Require <att>layer</att> when <att>staff</att> doesn't have multiple
                values.</desc>
              <constraint>
                <!-- the schematron context needs to list all elements which are members of att.controlevent.strict -->
                <sch:rule context="mei:slur|mei:hairpin">
                  <sch:assert
                    test="if (not(contains(@staff, ' ')) and not(@layer)) then false() else true()"
                    >@layer must be specified unless @staff is multi-valued.</sch:assert>
                </sch:rule>
              </constraint>
            </constraintSpec>
          </classSpec>
          <classSpec ident="att.staffident.req" module="MEI.shared" type="atts" mode="add">
            <desc>Required attributes for identifying the staff associated with the current
              feature.</desc>
            <attList>
              <attDef ident="staff" usage="req">
                <desc>signifies the staff on which a notated event occurs or to which a control
                  event applies. Mandatory when applicable.</desc>
                <datatype>
                  <rng:list>
                    <rng:oneOrMore>
                      <rng:data type="positiveInteger"/>
                    </rng:oneOrMore>
                  </rng:list>
                </datatype>
              </attDef>
            </attList>
          </classSpec>
          <!-- === REST ATTRIBUTES === -->
          <!-- Add required @dur class to rest attributes set -->
          <classSpec ident="att.rest.log" module="MEI.shared" type="atts" mode="change">
            <classes mode="change">
              <memberOf key="att.duration.musical" mode="delete"/>
              <memberOf key="att.duration.musical.req" mode="add"/>
            </classes>
            <exemplum>
              <p>A valid <gi>rest</gi> element containing the required <att>dur</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" tido:wrapper="inLayer">
                <rest dur="1" xml:id="d052"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>rest</gi> element without the required <att>dur</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" tido:wrapper="inLayer">
                <rest xml:id="d053"/>
              </egXML>
            </exemplum>
          </classSpec>
          <!-- === SPACE ATTRIBUTES === -->
          <!-- Add required @dur class to space attributes set -->
          <classSpec ident="att.space.log" module="MEI.shared" type="atts" mode="change">
            <classes mode="change">
              <memberOf key="att.duration.musical" mode="delete"/>
              <memberOf key="att.duration.musical.req" mode="add"/>
            </classes>
            <exemplum>
              <p>A valid <gi>space</gi> element containing the required <att>dur</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" tido:wrapper="inLayer">
                <space dur="1" xml:id="d054"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>space</gi> element without the required <att>dur</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" tido:wrapper="inLayer">
                <space xml:id="d055"/>
              </egXML>
            </exemplum>
          </classSpec>
          <!-- === NOTE ATTRIBUTES === -->
          <classSpec ident="att.note.log" module="MEI.shared" type="atts" mode="change">
            <classes mode="change">
              <memberOf key="att.accidental" mode="delete"/>
              <memberOf key="att.note.log.mensural" mode="delete"/>
            </classes>
            <constraintSpec ident="require_oct_and_pname_or_loc" scheme="isoschematron" mode="add">
              <desc>Require either <att>pname</att> and <att>oct</att> or <att>loc</att> on a
                note.</desc>
              <constraint>
                <sch:rule context="mei:note">
                  <sch:assert
                    test="if (not(@pname and @oct) and not(@loc)) then false() else true()">either
                    @pname and @oct or @loc must be specified on a note.</sch:assert>
                </sch:rule>
              </constraint>
            </constraintSpec>
            <exemplum>
              <p>A valid <gi>note</gi> element containing <att>pname</att>, <att>oct</att> and <att>dur</att> attributes</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" tido:wrapper="inLayer">
                <note pname="a" oct="4" dur="1" xml:id="d056"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>A valid <gi>note</gi> element containing <att>loc</att> and <att>dur</att> attributes</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" tido:wrapper="inLayer">
                <note loc="4" dur="1" xml:id="d057"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>note</gi> element without the required <att>dur</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" tido:wrapper="inLayer">
                <note pname="a" oct="4" xml:id="d058"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>note</gi> element specifying <att>pname</att> but not <att>oct</att></p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" tido:wrapper="inLayer">
                <note pname="a" dur="1" xml:id="d059"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>note</gi> element specifying <att>oct</att> but not <att>pname</att></p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" tido:wrapper="inLayer">
                <note oct="4" dur="1" xml:id="d060"/>
              </egXML>
            </exemplum>
          </classSpec>
          <!-- === SLUR ATTRIBUTES === -->
          <classSpec ident="att.slur.log.strict" module="MEI.cmn" type="atts" mode="add">
            <desc>Logical domain attributes.</desc>
            <classes>
              <memberOf key="att.controlevent.strict"/>
              <memberOf key="att.augmentdots"/>
              <memberOf key="att.duration.additive"/>
              <memberOf key="att.startendid"/>
              <memberOf key="att.timestamp2.musical.req"/>
            </classes>
          </classSpec>
          <!-- === HAIRPIN ATTRIBUTES === -->
          <classSpec ident="att.hairpin.log.strict" module="MEI.cmn" type="atts" mode="add">
            <desc>Logical domain attributes.</desc>
            <classes>
              <memberOf key="att.controlevent.strict"/>
              <memberOf key="att.augmentdots"/>
              <memberOf key="att.duration.additive"/>
              <memberOf key="att.startendid"/>
              <memberOf key="att.timestamp2.musical.req"/>
            </classes>
            <attList>
              <attDef ident="form" usage="req">
                <desc>captures the visual rendition and function of the hairpin; that is, whether it
                  indicates an increase or a decrease in volume.</desc>
                <valList type="closed">
                  <valItem ident="cres">
                    <desc>crescendo; i.e., louder.</desc>
                  </valItem>
                  <valItem ident="dim">
                    <desc>diminuendo; i.e., softer.</desc>
                  </valItem>
                </valList>
              </attDef>
            </attList>
          </classSpec>
          <!-- === CHORD ATTRIBUTES === -->
          <classSpec ident="att.chord.log" module="MEI.shared" type="atts" mode="change">
            <classes mode="change">
              <memberOf key="att.duration.musical" mode="delete"/>
              <memberOf key="att.duration.musical.req" mode="add"/>
            </classes>
            <exemplum>
              <p>A valid <gi>chord</gi> element</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" tido:wrapper="inLayer">
                <chord xml:id="d061" dur="1">
                  <note pname="a" oct="4" xml:id="d062"/>
                  <note pname="a" oct="4" xml:id="d063"/>
                </chord>
              </egXML>
            </exemplum>
            <exemplum>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" tido:wrapper="inLayer">
                <p>An invalid <gi>chord</gi> element without the required <att>dur</att> attribute</p>
                <chord xml:id="d064">
                  <note pname="a" oct="4" xml:id="d065"/>
                  <note pname="a" oct="4" xml:id="d066"/>
                </chord>
              </egXML>
            </exemplum>
            <exemplum>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" tido:wrapper="inLayer">
                <p>An invalid chord in which the <att>dur</att> attributes of the <gi>note</gi>
                  elements don't match the <gi>chord</gi> element's <att>dir</att></p>
                <chord xml:id="d067" dur="1">
                  <note pname="a" oct="4" dur="1" xml:id="d068"/>
                  <note pname="a" oct="4" xml:id="d069"/>
                </chord>
              </egXML>
            </exemplum>
            <exemplum>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" tido:wrapper="inLayer">
                <p>An invalid chord in which the <att>dur</att> attributes of the <gi>note</gi>
                  elements don't match the <gi>chord</gi> element's <att>dir</att></p>
                <chord dur="1" xml:id="d070">
                  <note pname="a" oct="4" dur="1" xml:id="d071"/>
                  <note pname="a" oct="4" dur="2" xml:id="d072"/>
                </chord>
              </egXML>
            </exemplum>
            <exemplum>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" tido:wrapper="inLayer">
                <p>An invalid chord in which the <att>dur</att> attributes of the <gi>note</gi>
                  elements don't match the <gi>chord</gi> element's <att>dir</att></p>
                <chord dur="1" xml:id="d073">
                  <note pname="a" oct="4" dur="2" xml:id="d074"/>
                  <note pname="a" oct="4" xml:id="d075"/>
                </chord>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid chord in which the <att>dur</att> attributes of the <gi>note</gi>
                elements don't match the <gi>chord</gi> element's <att>dir</att></p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" tido:wrapper="inLayer">
                <chord dur="1" xml:id="d076">
                  <note pname="a" oct="4" dur="2" xml:id="d077"/>
                  <note pname="a" oct="4" dur="2" xml:id="d078"/>
                </chord>
              </egXML>
            </exemplum>
            <exemplum>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" tido:wrapper="inLayer">
                <p>An invalid chord in which the <att>dur</att> attributes of the <gi>note</gi>
                  elements don't match the <gi>chord</gi> element's <att>dir</att></p>
                <chord dur="1" xml:id="d079">
                  <note pname="a" oct="4" xml:id="d080"/>
                  <note pname="a" oct="4" dur="2" xml:id="d081"/>
                </chord>
              </egXML>
            </exemplum>
            <exemplum>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" tido:wrapper="inLayer">
                <p>An invalid chord in which the <att>dur</att> attributes of the <gi>note</gi>
                  elements don't match the <gi>chord</gi> element's <att>dir</att></p>
                <chord dur="2" xml:id="d082">
                  <note pname="a" oct="4" dur="1" xml:id="d083"/>
                  <note pname="a" oct="4" dur="2" xml:id="d084"/>
                </chord>
              </egXML>
            </exemplum>
          </classSpec>
          <!-- === ELEMENT SPECIFICATIONS === -->
          <!-- TODO determine where the tido:style element should be put; FRBR manifestation? -->
          <elementSpec ident="style" module="MEI.header" ns="http://tido-music.com/ns/1.0"
            mode="add">
            <desc>Contains a reference to a Tido Stylesheet (TSS).</desc>
            <classes>
              <memberOf key="att.id"/>
            </classes>
            <content>
              <rng:text/>
            </content>
            <attList>
              <attDef ident="src" usage="opt">
                <desc>Specifies the location of the associated Tido Stylesheet (TSS).</desc>
                <datatype>
                  <rng:ref name="data.URI"/>
                </datatype>
              </attDef>
            </attList>
          </elementSpec>
          <elementSpec ident="meiHead" module="MEI.header" mode="change">
            <content>
              <rng:ref name="style"/>
              <rng:zeroOrMore>
                <rng:ref name="altId"/>
              </rng:zeroOrMore>
              <rng:ref name="fileDesc"/>
              <rng:ref name="model.headerPart_sequenceOptional"/>
              <rng:optional>
                <rng:ref name="revisionDesc"/>
              </rng:optional>
            </content>
          </elementSpec>
          <!-- === NOTE === -->
          <elementSpec ident="note" module="MEI.shared" mode="change">
            <constraintSpec ident="require_out_of_chord" scheme="isoschematron" mode="add">
              <desc>Require <att>dur</att> on notes outside chords.</desc>
              <!-- Make @dur mandatory when applicable on note element -->
              <constraint>
                <sch:rule context="mei:note">
                  <sch:assert
                    test="if (not(ancestor::mei:chord) and not(@dur)) then false() else true()">
                    Must have dur attribute.</sch:assert>
                </sch:rule>
              </constraint>
            </constraintSpec>
            <constraintSpec ident="no_stem_in_chord" scheme="isoschematron" mode="add">
              <desc>Forbid att.stemmed attributes on notes in chords.</desc>
              <!-- Make @dur mandatory when applicable on note element -->
              <constraint>
                <sch:rule context="mei:note[ancestor::mei:chord]">
                  <sch:report test="@stem.dir or @stem.len or @stem.pos or @stem.x or @stem.y"> Stem
                    attributes not permitted on notes within a chord.</sch:report>
                </sch:rule>
              </constraint>
            </constraintSpec>
            <exemplum>
              <p>A valid <att>note</att> element with a down stem</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" tido:wrapper="inLayer">
                <note pname="a" oct="4" dur="4" stem.dir="down" xml:id="d085"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>A valid <att>note</att> element with an up stem</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" tido:wrapper="inLayer">
                <note pname="a" dur="4" oct="2" stem.dir="up" xml:id="d092"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>A valid <att>note</att> element without a <att>stem.dir</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" tido:wrapper="inLayer">
                <note pname="a" oct="4" dur="4" xml:id="d086"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <att>note</att> element without a <att>dur</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" tido:wrapper="inLayer">
                <note pname="a" dur="4" xml:id="d087"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <att>note</att> element with an <att>oct</att> but no <att>pname</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" tido:wrapper="inLayer">
                <note oct="4" dur="4" xml:id="d088"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <att>note</att> element with a <att>pname</att> but no <att>oct</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" tido:wrapper="inLayer">
                <note pname="a" oct="4" xml:id="d089"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <att>note</att> element missing both duration and pitch</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" tido:wrapper="inLayer">
                <note xml:id="d090"/>
              </egXML>
            </exemplum>
          </elementSpec>
          <!-- === CHORD === -->
          <elementSpec ident="chord" module="MEI.shared" mode="change">
            <constraintSpec ident="chord_notes_same_dur" scheme="isoschematron" mode="add">
              <desc>Require chord and notes to have the same duration</desc>
              <constraint>
                <sch:rule
                  context="mei:chord[@dur][count(distinct-values(for $n in descendant::mei:note return $n/@dur)) > 0]">
                  <sch:let name="durs"
                    value="distinct-values(for $n in descendant::mei:note return $n/@dur)"/>
                  <sch:let name="durs_count"
                    value="count(distinct-values($durs)) + count(descendant::mei:note[not(@dur)])"/>
                  <sch:report test="$durs_count &gt; 1 or not($durs[1] = @dur)"> Duration of chord
                    and constituent notes must match.</sch:report>
                </sch:rule>
              </constraint>
            </constraintSpec>
            <exemplum>
              <p>A valid <gi>chord</gi> element with a <att>stem.dir</att> attribute and child notes without <att>stem.dir</att></p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" tido:wrapper="inLayer">
                <chord xml:id="d093" dur="4" stem.dir="up">
                  <note xml:id="d094" pname="a" oct="4"/>
                  <note xml:id="d095" pname="c" oct="4"/>
                </chord>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>chord</gi> element with child notes containing <att>stem.dir</att> attributes</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" tido:wrapper="inLayer">
                <chord xml:id="d096" dur="4" stem.dir="up">
                  <note xml:id="d097" pname="a" oct="4" stem.dir="up"/>
                  <note xml:id="d098" pname="c" oct="4" stem.dir="up"/>
                </chord>
              </egXML>
            </exemplum>
          </elementSpec>
          <!-- === LAYER === -->
          <elementSpec ident="layer" module="MEI.shared" mode="change">
            <attList>
              <attDef ident="n" usage="req" mode="change">
                <desc>provides a name or number designation for an element. While the value need not
                  be unique, it is required to be a single token. Must be an integer.</desc>
                <datatype>
                  <rng:data type="positiveInteger"/>
                </datatype>
              </attDef>
            </attList>
            <exemplum>
              <p>A valid layer element with a positive integer <att>n</att> value</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" tido:wrapper="inSection">
                <measure n="1" xml:id="d103">
                  <staff n="1" xml:id="d104">
                    <layer n="1" xml:id="d105"/>
                  </staff>
                </measure>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid layer element missing <att>n</att></p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" tido:wrapper="inSection">
                <measure n="1" xml:id="d106">
                  <staff n="1" xml:id="d107">
                    <layer xml:id="d108"/>
                  </staff>
                </measure>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid layer element with a non-integer <att>n</att></p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" tido:wrapper="inSection">
                <measure n="1" xml:id="d109">
                  <staff n="1" xml:id="d110">
                    <layer n="s1" xml:id="d111"/>
                  </staff>
                </measure>
              </egXML>
            </exemplum>
          </elementSpec>
          <!-- === STAFF === -->
          <elementSpec ident="staff" module="MEI.shared" mode="change">
            <attList>
              <attDef ident="n" usage="req" mode="change">
                <desc>provides a name or number designation for an element. While the value need not
                  be unique, it is required to be a single token. Must be an integer.</desc>
                <datatype>
                  <rng:data type="positiveInteger"/>
                </datatype>
              </attDef>
            </attList>
            <exemplum>
              <p>A valid staff element with a positive integer <att>n</att> value</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" tido:wrapper="inSection">
                <measure n="1" xml:id="d112">
                  <staff n="1" xml:id="d113">
                    <layer n="1" xml:id="d114"/>
                  </staff>
                </measure>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid staff element missing <att>n</att></p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" tido:wrapper="inSection">
                <measure n="1" xml:id="d115">
                  <staff xml:id="d116">
                    <layer n="1" xml:id="d117"/>
                  </staff>
                </measure>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid staff element with a non-integer <att>n</att></p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" tido:wrapper="inSection">
                <measure n="1" xml:id="d118">
                  <staff n="s1" xml:id="d119">
                    <layer n="1" xml:id="d120"/>
                  </staff>
                </measure>
              </egXML>
            </exemplum>
          </elementSpec>
          <!-- === SLUR === -->
          <elementSpec ident="slur" module="MEI.cmn" mode="change">
            <classes mode="change">
              <memberOf key="att.slur.log" mode="delete"/>
              <memberOf key="att.slur.log.strict" mode="add"/>
            </classes>
            <exemplum>
              <p>A valid <gi>slur</gi> with all required attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" tido:wrapper="afterStaff">
                <slur tstamp="1" tstamp2="0m+2" staff="1" layer="1" xml:id="d121"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>slur</gi> missing the <att>tstamp2</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                tido:wrapper="afterStaff">
                <slur tstamp="1" layer="1" staff="1" xml:id="d122"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>slur</gi> missing the <att>tstamp</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                tido:wrapper="afterStaff">
                <slur tstamp2="0m+2" layer="1" staff="1" xml:id="d123"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>slur</gi> missing the <att>staff</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                tido:wrapper="afterStaff">
                <slur tstamp="1" tstamp2="0m+2" layer="1" xml:id="d124"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>slur</gi> with a single value in <att>staff</att> but no <att>layer</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                tido:wrapper="afterStaff">
                <slur tstamp="1" tstamp2="0m+2" staff="1" xml:id="d125"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>A valid <gi>slur</gi> with a single value in <att>staff</att> and a <att>layer</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" tido:wrapper="afterStaff">
                <slur xml:id="d126" layer="1" staff="1" tstamp="1" tstamp2="0m+2"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>A valid <gi>slur</gi> with a fraction in <att>tstamp2</att></p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" tido:wrapper="afterStaff">
                <slur xml:id="d127" layer="1" staff="1" tstamp="1" tstamp2="0m+2.00"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>A valid <gi>slur</gi> with a fraction in <att>tstamp2</att></p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" tido:wrapper="afterStaff">
                <slur xml:id="d128" layer="1" staff="1" tstamp="1" tstamp2="0m+2.10"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>slur</gi> with space characters <att>tstamp2</att></p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                tido:wrapper="afterStaff">
                <slur xml:id="d129" layer="1" staff="1" tstamp="1" tstamp2="0m + 2"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>slur</gi> with only a digit in <att>tstamp2</att></p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                tido:wrapper="afterStaff">
                <slur xml:id="d130" layer="1" staff="1" tstamp="1" tstamp2="2"/>
              </egXML>
            </exemplum>
          </elementSpec>
          <!-- === HAIRPIN -->
          <elementSpec ident="hairpin" module="MEI.cmn" mode="change">
            <classes mode="change">
              <memberOf key="att.hairpin.log" mode="delete"/>
              <memberOf key="att.hairpin.log.strict" mode="add"/>
            </classes>
            <exemplum>
              <p>A valid <gi>hairpin</gi> with all required attributes</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" tido:wrapper="afterStaff">
                <hairpin form="cres" tstamp="1" tstamp2="0m+2" staff="1" layer="1" xml:id="d131"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>hairpin</gi> missing the <att>form</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                tido:wrapper="afterStaff">
                <hairpin tstamp="1" tstamp2="0m+2" layer="1" staff="1" xml:id="d132"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>hairpin</gi> missing the <att>tstamp2</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                tido:wrapper="afterStaff">
                <hairpin form="cres" tstamp="1" layer="1" staff="1" xml:id="d133"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>hairpin</gi> missing the <att>tstamp</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                tido:wrapper="afterStaff">
                <hairpin form="cres" tstamp2="0m+2" layer="1" staff="1" xml:id="d134"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>hairpin</gi> missing the <att>staff</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                tido:wrapper="afterStaff">
                <hairpin form="cres" tstamp="1" tstamp2="0m+2" layer="1" xml:id="d135"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>hairpin</gi> with a single value in <att>staff</att> but no <att>layer</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                tido:wrapper="afterStaff">
                <hairpin form="cres" tstamp="1" tstamp2="0m+2" staff="1" xml:id="d136"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>A valid <gi>hairpin</gi> with two values in <att>staff</att> and no <att>layer</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true"
                tido:wrapper="afterTwoStaves">
                <hairpin form="cres" tstamp="1" tstamp2="0m+2" staff="1 2" xml:id="d137"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>hairpin</gi> with two values in <att>staff</att> and a <att>layer</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                tido:wrapper="afterTwoStaves">
                <hairpin form="cres" tstamp="1" tstamp2="0m+2" staff="1 2" layer="1 2 3"
                  xml:id="d138"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>A valid <gi>hairpin</gi> with a single value in <att>staff</att> and multiple values in <att>layer</att></p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true"
                tido:wrapper="afterTwoStaves">
                <hairpin form="cres" tstamp="1" tstamp2="0m+2" staff="1" layer="1 2 3" xml:id="d139"
                />
              </egXML>
            </exemplum>
          </elementSpec>
          <!-- === STAFFDEF === -->
          <elementSpec ident="staffDef" module="MEI.shared" mode="change">
            <attList>
              <attDef ident="n" usage="req" mode="change">
                <desc>provides a name or number designation for an element. While the value need not
                  be unique, it is required to be a single token. Must be an integer.</desc>
                <datatype>
                  <rng:data type="positiveInteger"/>
                </datatype>
              </attDef>
            </attList>
            <exemplum>
              <p>A valid <gi>staffDef</gi> containing all required attributes</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true"
                tido:wrapper="inInitialStaffGrp">
                <staffDef lines="5" xml:id="d141" n="1"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>A valid <gi>staffDef</gi> containing all required attributes and a <gi>clef</gi> child element</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true"
                tido:wrapper="inInitialStaffGrp">
                <staffDef lines="5" xml:id="d142" n="2">
                  <clef shape="G" line="2" xml:id="d143"/>
                </staffDef>
              </egXML>
            </exemplum>
            <exemplum>
              <p>A valid <gi>staffDef</gi> containing all required attributes and a <gi>meterSig</gi> child element</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true"
                tido:wrapper="inInitialStaffGrp">
                <staffDef lines="5" xml:id="d144" n="3">
                  <meterSig count="4" unit="4" xml:id="d145"/>
                </staffDef>
              </egXML>
            </exemplum>
          </elementSpec>
          <!-- === SCORE === -->
          <elementSpec ident="score" module="MEI.shared" mode="change">
            <attList>
              <attDef mode="add" ident="tido.playbackorder" usage="opt">
                <desc>Determines in which order the measures of a score should played for playback.
                  The value may be any string. TEMPORARY</desc>
                <datatype>
                  <rng:data type="string"/>
                </datatype>
              </attDef>
              <attDef mode="add" ident="tido.systemspacing" usage="opt">
                <desc>Determines the spacing between systems. The value must be a decimal number.
                  TEMPORARY</desc>
                <datatype>
                  <rng:data type="decimal"/>
                </datatype>
              </attDef>
            </attList>
          </elementSpec>
          <!-- === METER SIG === -->
          <elementSpec ident="meterSig" module="MEI.cmn" mode="change">
            <constraintSpec ident="meter_att_pair" scheme="isoschematron" mode="add">
              <desc>@count and @unit must occur together.</desc>
              <constraint>
                <sch:rule context="mei:meterSig">
                  <sch:report test="not(@count and @unit)">Time signature must be complete (both
                    @count and @unit are required).</sch:report>
                </sch:rule>
              </constraint>
            </constraintSpec>
            <exemplum>
              <p>A valid <gi>meterSig</gi> containing all required attributes</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true"
                tido:wrapper="inInitialStaffGrp">
                <staffDef n="1" lines="5" xml:id="d146">
                  <meterSig xml:id="d147" count="4" unit="4"/>
                </staffDef>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>meterSig</gi> without the <att>unit</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                tido:wrapper="inInitialStaffGrp">
                <staffDef n="1" lines="5" xml:id="d148">
                  <meterSig xml:id="d149" count="4"/>
                </staffDef>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>meterSig</gi> without the <att>count</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                tido:wrapper="inInitialStaffGrp">
                <staffDef n="1" lines="5" xml:id="d150">
                  <meterSig xml:id="d151" unit="4"/>
                </staffDef>
              </egXML>
            </exemplum>
          </elementSpec>
          <!-- === KEY SIG === -->
          <elementSpec ident="keySig" module="MEI.shared" mode="change">
            <constraintSpec ident="key_att_pair" scheme="isoschematron" mode="add">
              <desc>@pname and @mode must occur together.</desc>
              <constraint>
                <sch:rule context="mei:keySig">
                  <sch:report test="not(@pname and @mode)"> Key signature must be complete (both
                    @pname and @mode are required).</sch:report>
                </sch:rule>
              </constraint>
            </constraintSpec>
            <exemplum>
              <p>A valid <gi>keySig</gi> with all required attributes</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true"
                tido:wrapper="inInitialStaffGrp">
                <staffDef n="1" xml:id="d152">
                  <keySig xml:id="d153" pname="f" mode="major"/>
                </staffDef>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>keySig</gi> with an <att>accid</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true"
                tido:wrapper="inInitialStaffGrp">
                <staffDef n="1" xml:id="d154">
                  <keySig xml:id="d155" pname="f" accid="s" mode="major"/>
                </staffDef>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>keySig</gi> without the <att>mode</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                tido:wrapper="inInitialStaffGrp">
                <staffDef n="1" xml:id="d156">
                  <keySig xml:id="d157" pname="f"/>
                </staffDef>
              </egXML>
            </exemplum>
            <exemplum>
              <p>A invalid <gi>keySig</gi> without the <att>pname</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                tido:wrapper="inInitialStaffGrp">
                <staffDef n="1" xml:id="d158">
                  <keySig xml:id="d159" mode="major"/>
                </staffDef>
              </egXML>
            </exemplum>
          </elementSpec>
          <!-- === PEDAL === -->
          <elementSpec ident="pedal" module="MEI.cmn" mode="change">
            <constraintSpec ident="pedal_style_consistent" scheme="isoschematron" mode="add">
              <constraint>
                <sch:rule context="mei:pedal[@form][@dir=('bounce', 'up')]">
                  <sch:let name="form" value="@form"/>
                  <sch:assert test="preceding::mei:pedal[@dir=('down', 'half')][1][@form=$form]">
                    Pedal styles must be consistent between pedal down and pedal up.</sch:assert>
                </sch:rule>
              </constraint>
            </constraintSpec>
            <exemplum>
              <p>A valid sequence of <gi>pedal</gi> elements</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" tido:wrapper="afterStaff">
                <pedal dir="down" tstamp="1" form="line" xml:id="d160"/>
                <pedal dir="bounce" tstamp="1" form="line" xml:id="d161"/>
                <pedal dir="up" tstamp="2" form="line" xml:id="d162"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid sequence of <gi>pedal</gi> elements</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                tido:wrapper="afterStaff">
                <pedal dir="down" tstamp="1" form="line" xml:id="d163"/>
                <pedal dir="bounce" tstamp="1" form="line" xml:id="d164"/>
                <pedal dir="up" tstamp="2" form="pedstar" xml:id="d165"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid sequence of <gi>pedal</gi> elements</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                tido:wrapper="afterStaff">
                <pedal dir="down" tstamp="1" form="line" xml:id="d166"/>
                <pedal dir="bounce" tstamp="1" form="altpedstar" xml:id="d167"/>
                <pedal dir="up" tstamp="2" form="line" xml:id="d168"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>A valid sequence of <gi>pedal</gi> elements</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" tido:wrapper="afterStaff">
                <pedal dir="half" tstamp="1" form="altpedstar" xml:id="d169"/>
                <pedal dir="up" tstamp="2" form="altpedstar" xml:id="d170"/>
              </egXML>
            </exemplum>
          </elementSpec>
          <!-- === NUMBER PLACEMENT === -->
          <classSpec ident="att.numberplacement" module="MEI.cmn" type="atts" mode="change">
            <attList>
              <attDef ident="num.loc" usage="opt" mode="add" ns="http://tido-music.com/ns/1.0">
                <desc>holds the staff location of the number.</desc>
                <datatype>
                  <rng:ref name="data.STAFFLOC"/>
                </datatype>
              </attDef>
            </attList>
          </classSpec>
          <classSpec ident="att.mordent.vis" module="MEI.cmnOrnaments" type="atts" mode="change">
            <classes mode="change">
              <memberOf key="att.altsym" mode="delete"/>
              <memberOf key="att.ornam.altsym" mode="add"/>
            </classes>
          </classSpec>
          <classSpec ident="att.trill.vis" module="MEI.cmnOrnaments" type="atts" mode="change">
            <classes mode="change">
              <memberOf key="att.altsym" mode="delete"/>
              <memberOf key="att.ornam.altsym" mode="add"/>
            </classes>
          </classSpec>
          <classSpec ident="att.turn.vis" module="MEI.cmnOrnaments" type="atts" mode="change">
            <classes mode="change">
              <memberOf key="att.altsym" mode="delete"/>
              <memberOf key="att.ornam.altsym" mode="add"/>
            </classes>
          </classSpec>
          <elementSpec ident="ornam" module="MEI.shared" mode="change">
            <exemplum>
              <p>A valid <gi>ornam</gi> element specifying the glyph in its text content</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" tido:wrapper="afterStaff">
                <ornam place="above" staff="1" layer="1" tstamp="1" xml:id="d171">&#x1234;</ornam>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>ornam</gi> element specifying the glyph in a nested <gi>symbol</gi> element</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                tido:wrapper="afterStaff">
                <ornam place="above" staff="1" layer="1" tstamp="1" xml:id="d172">
                  <symbol ref="#smuflOrnamentMordent" xml:id="d173"/>
                </ornam>
              </egXML>
            </exemplum>
            <exemplum>
              <p>A valid <gi>ornam</gi> element specifying the glyph in the <att>altsym</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" tido:wrapper="afterStaff">
                <ornam place="above" staff="1" layer="1" tstamp="1" altsym="#ornamentMordent"
                  xml:id="d174"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>ornam</gi> element specifying a non-support glyph in the <att>altsym</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                tido:wrapper="afterStaff">
                <ornam place="above" staff="1" layer="1" tstamp="1" altsym="#nonSupportedGlyph"
                  xml:id="d175"/>
              </egXML>
            </exemplum>
          </elementSpec>
          <!-- DATA TYPES -->
          <macroSpec ident="data.ACCIDENTAL.EXPLICIT" module="MEI" type="dt" mode="replace">
            <desc>Accidental attribute values.</desc>
            <content>
              <valList type="closed">
                <valItem ident="s">
                  <desc>Sharp.</desc>
                </valItem>
                <valItem ident="f">
                  <desc>Flat.</desc>
                </valItem>
                <valItem ident="x">
                  <desc>Double sharp (written using croix).</desc>
                </valItem>
                <valItem ident="ff">
                  <desc>Double flat.</desc>
                </valItem>
                <valItem ident="n">
                  <desc>Natural.</desc>
                </valItem>
              </valList>
            </content>
            <remarks>
              <p>
                <graphic
                  url="https://music-encoding.googlecode.com/svn/trunk/source/guidelines/Images/ExampleImages/accid-20100510.png"
                  height="50%" width="50%"/>
              </p>
            </remarks>
          </macroSpec>
          <macroSpec ident="data.ACCIDENTAL.IMPLICIT" module="MEI" type="dt" mode="replace">
            <desc>Accidental attribute values.</desc>
            <valList type="closed">
              <valItem ident="s">
                <desc>Sharp.</desc>
              </valItem>
              <valItem ident="f">
                <desc>Flat.</desc>
              </valItem>
              <valItem ident="ss">
                <desc>Double sharp.</desc>
              </valItem>
              <valItem ident="ff">
                <desc>Double flat.</desc>
              </valItem>
              <valItem ident="n">
                <desc>Natural.</desc>
              </valItem>
            </valList>
          </macroSpec>
          <macroSpec ident="data.ARTICULATION" module="MEI" type="dt" mode="replace">
            <desc>The following list of articulations mostly corresponds to symbols from the Western
              Musical Symbols portion of the Unicode Standard. The dot and stroke values may be used
              in cases where interpretation is difficult or undesirable.</desc>
            <content>
              <valList type="closed">
                <valItem ident="acc">
                  <desc>Accent (Unicode 1D17B).</desc>
                </valItem>
                <valItem ident="stacc">
                  <desc>Staccato (Unicode 1D17C).</desc>
                </valItem>
                <valItem ident="ten">
                  <desc>Tenuto (Unicode 1D17D).</desc>
                </valItem>
                <valItem ident="stacciss">
                  <desc>Staccatissimo (Unicode 1D17E).</desc>
                </valItem>
                <valItem ident="marc">
                  <desc>Marcato (Unicode 1D17F).</desc>
                </valItem>
              </valList>
            </content>
          </macroSpec>
        </specGrp>
      </div>
    </back>
  </text>
</TEI>
