<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://www.tei-c.org/release/xml/tei/custom/schema/relaxng/tei_odds.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>
<?xml-model href="http://www.tei-c.org/release/xml/tei/custom/schema/relaxng/tei_odds.rng" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:rng="http://relaxng.org/ns/structure/1.0" xmlns:sch="http://purl.oclc.org/dsdl/schematron">
  <teiHeader>
    <fileDesc>
      <titleStmt>
        <title type="main">Tido Project Specific Customization of the Music Encoding Initiative
          Guidelines</title>
        <author xml:id="RV">Raffaele Viglianti</author>
        <author xml:id="ZK">Zoltán Kőmíves</author>
        <author xml:id="AE">Alexander Erhard</author>
      </titleStmt>
      <publicationStmt>
        <publisher>Tido (UK) Ltd.</publisher>
        <availability>
          <p>Copyright 2014-2016 Tido Ltd.</p>
          <p>Licensed under <ref target="https://opensource.org/licenses/ECL-2.0">Educational Community License 2.0</ref>
            you may not use this file except in compliance with the License. You may
            obtain a copy of the License at

            <ref target="https://opensource.org/licenses/ECL-2.0">https://opensource.org/licenses/ECL-2.0</ref>

            Unless required by applicable law or agreed to in writing,
            software distributed under the License is distributed on an "AS IS"
            BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
            or implied. See the License for the specific language governing
            permissions and limitations under the License.
          </p>
        </availability>
      </publicationStmt>
      <sourceDesc>
        <p>Born digital.</p>
      </sourceDesc>
    </fileDesc>
    <encodingDesc>
      <tagsDecl>
        <rendition xml:id="afterStaff" scheme="free">
          <ptr target="../test/jade/wrappers/afterStaff.jade"/>
        </rendition>
        <rendition xml:id="afterTwoStaves" scheme="free">
          <ptr target="../test/jade/wrappers/afterTwoStaves.jade"/>
        </rendition>
        <rendition xml:id="inInitialScoreDef" scheme="free">
          <ptr target="../test/jade/wrappers/inInitialScoreDef.jade"/>
        </rendition>
        <rendition xml:id="inInitialStaffGrp" scheme="free">
          <ptr target="../test/jade/wrappers/inInitialStaffGrp.jade"/>
        </rendition>
        <rendition xml:id="inInitialStaffDefGrp" scheme="free">
          <ptr target="../test/jade/wrappers/inInitialStaffDefGrp.jade"/>
        </rendition>
        <rendition xml:id="inLayer" scheme="free">
          <ptr target="../test/jade/wrappers/inLayer.jade"/>
        </rendition>
        <rendition xml:id="inSection" scheme="free">
          <ptr target="../test/jade/wrappers/inSection.jade"/>
        </rendition>
        <rendition xml:id="inLayerAfterMeasureWithFourQuarters" scheme="free">
          <ptr target="../test/jade/wrappers/inLayerAfterMeasureWithFourQuarters.jade"/>
        </rendition>
        <rendition xml:id="inLayerBeforeMeasureWithFourQuarters" scheme="free">
          <ptr target="../test/jade/wrappers/inLayerBeforeMeasureWithFourQuarters.jade"/>
        </rendition>
        <rendition xml:id="inMeasure" scheme="free">
          <ptr target="../test/jade/wrappers/inMeasure.jade"/>
        </rendition>
        <rendition xml:id="inScore" scheme="free">
          <ptr target="../test/jade/wrappers/inScore.jade"/>
        </rendition>
        <rendition xml:id="inScoreDef" scheme="free">
          <ptr target="../test/jade/wrappers/inScoreDef.jade"/>
        </rendition>
        <rendition xml:id="inScoreinSection" scheme="free">
          <ptr target="../test/jade/wrappers/inScoreinSection.jade"/>
        </rendition>
        <rendition xml:id="inStaffDefAfterLastMeasure" scheme="free">
          <ptr target="../test/jade/wrappers/inStaffDefAfterLastMeasure.jade"/>
        </rendition>
        <rendition xml:id="twoStavesInSection" scheme="free">
          <ptr target="../test/jade/wrappers/twoStavesInSection.jade"/>
        </rendition>
      </tagsDecl>
    </encodingDesc>
  </teiHeader>
  <text>
    <front>
      <divGen type="toc"/>
    </front>
    <body>
      <div>
        <head>Introduction</head>
        <p>This document provides a minimal MEI customization in order to define a very basic
          subset of elements with appropriate restrictions for basic use cases.
          For general information about MEI, please refer to the
          <ref target="http://music-encoding.org/documentation/guidelines2013/chapters">MEI
            Guidelines</ref>. Please note however, that this customization builds on the
          <ref target="https://github.com/tido/music-encoding/tree/develop">development branch</ref>
          of the MEI project, which is more advanced than the current release.

          Each restriction is implemented using the
          <ref target="http://www.tei-c.org/Guidelines/Customization/odds.xml">TEI ODD</ref> specification language,
          and documented in the prose section of this document, including examples (what is valid)
          and counter-examples (what is invalid).</p>
        <p>The <ref target="#tidoSchemaSpec">Specifications</ref> section lists every element available in the customization
          and can be used as a technical reference.</p>
      </div>
      <div>
        <head>Module Selection</head>
        <p>This basic customization only adopts following modules:</p>
        <list rend="bulleted">
          <item>MEI</item>
          <item>MEI.shared</item>
          <item>MEI.header</item>
          <item>MEI.cmn</item>
          <item>MEI.namesdates</item>
          <item>MEI.ptrref</item>
        </list>
      </div>
      <div>
        <head>Common Attributes</head>
        <p><att>xml:id</att> is mandatory on all elements, <att>n</att> is mandatory on: <list rend="bulleted">
          <item><gi>layer</gi></item>
          <item><gi>staff</gi></item>
          <item><gi>staffDef</gi></item>
        </list></p>
      </div>
      <div>
        <head>Clefs, Time and Key Signatures</head>
        <div>
          <head>Time signature</head>
          <p>Time signature <emph>must</emph> be expressed in a <gi>meterSig</gi> child element of
              <gi>staffDef</gi>.</p>
          <p>To define a time signature, the customization uses <att>unit</att> and <att>count</att> on
              <gi>meterSig</gi>. They <emph>must</emph> occur together:</p>
          <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="feasible"
            rendition="#inInitialStaffGrp">
            <staffDef xml:id="d001">
              <meterSig count="4" unit="4" xml:id="d002"/>
            </staffDef>
          </egXML>
          <p>Attributes for encoding time signatures on <gi>scoreDef</gi> and <gi>staffDef</gi> are
            excluded from the schema.</p>
        </div>
        <div>
          <head>Key signature</head>
          <p>Key signature <emph>must</emph> be expressed in a <gi>keySig</gi> child element
            of <gi>staffDef</gi> at this stage of development.</p>
          <p>To define a key signature, the customization uses the <att>pname</att>, <att>accid</att> and
              <att>mode</att> attributes of <gi>keySig</gi>. <att>pname</att> and <att>mode</att>
            <emph>must</emph> occur together, <att>accid</att> is optional.</p>
          <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="feasible"
            rendition="#inInitialStaffDefGrp">
            <staffDef xml:id="d003">
              <keySig pname="f" accid="s" mode="major" xml:id="d004"/>
            </staffDef>
          </egXML>
          <p>Attributes for encoding key signatures on <gi>scoreDef</gi> and <gi>staffDef</gi> are
            excluded from the schema.</p>
        </div>
        <div>
          <head>Clefs</head>
          <p>Clefs <emph>must</emph> be expressed using the <gi>clef</gi> element.</p>
          <p>To define a clef, the customization uses <att>shape</att> and <att>line</att>, which
              <emph>must</emph> occur together.</p>
          <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="feasible"
            rend="#inInitialStaffGrp">
            <staffDef lines="5" xml:id="d005" n="2">
              <clef shape="G" line="2" xml:id="d006"/>
            </staffDef>
          </egXML>
          <p>Attributes for encoding clefs on <gi>scoreDef</gi> and <gi>staffDef</gi> are excluded
            from the schema.</p>
        </div>
      </div>
      <div>
        <head>Events</head>
        <p>This section describes restrictions to timed events on staves, such as notes or rests.</p>
        <div>
          <head>Notes</head>
          <p>Notes must either have an octave and a pitch name or a <att>loc</att> attribute. Stem direction remains optional,
            but is recommended. Notes within chords must not express stem information and duration</p>
          <p>This is a typical note:</p>
          <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" rendition="#inLayer">
            <note pname="a" oct="4" dur="4" stem.dir="up" xml:id="d007"/>
          </egXML>
        </div>
        <div>
          <head>Duration and stem direction</head>
          <p>The gestural duration attribute <att>dur.ges</att> is excluded in this customization.
            In addition, the specification of the <att>dur</att> and <att>stem.dir</att> attributes
            on events is more tightly  controlled than it is in <emph>mei_all</emph>, as described
            in the following sections.
          </p>
          <div>
            <head>Notes</head>
            <p>Notes must always have a duration (<att>dur</att>) and a stem direction (<att>stem.dir</att>)
              except when they are part of a chord.</p>
          </div>
          <div>
            <head>Rests and spaces</head>
            <p><gi>rest</gi> and <gi>space</gi> elements must always have a duration (<att>dur</att>).</p>
          </div>
          <div>
            <head>Chords</head>
            <p>Duration and stem direction on chords must be expressed on the <gi>chord</gi> element. The constituent
                <gi>note</gi> elements are not allowed to express duration or stem direction.</p>
            <list rend="bulleted">
              <item>Duration on chord: <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true"
                  rendition="#inLayer">
                  <chord dur="4" stem.dir="up" xml:id="d008">
                    <note pname="a" oct="4" xml:id="d009"/>
                    <note pname="f" oct="4" xml:id="d010"/>
                  </chord>
                </egXML>
              </item>
              <item>Durations on child notes are not allowed: <egXML
                  xmlns="http://www.tei-c.org/ns/Examples" valid="false" rendition="#inLayer">
                  <chord dur="4" stem.dir="up" xml:id="d011">
                    <note pname="a" oct="4" dur="4" xml:id="d012"/>
                    <note pname="f" oct="4" dur="4" xml:id="d013"/>
                  </chord>
                </egXML>
              </item>
              <item>Stem directions on child notes are not allowed: <egXML
                xmlns="http://www.tei-c.org/ns/Examples" valid="false" rendition="#inLayer">
                <chord dur="4" stem.dir="up" xml:id="d014">
                  <note pname="a" oct="4" stem.dir="up" xml:id="d015"/>
                  <note pname="f" oct="4" stem.dir="up" xml:id="d016"/>
                </chord>
              </egXML>
              </item>
            </list>
          </div>
        </div>
        <div>
          <head>Control events</head>
          <div>
            <head>Placement relative to staves</head>
            <p>Some control events, such as <gi>hairpin</gi>, <gi>dynam</gi>, etc. can be placed either directly
              above or below a single staff or in the middle between two staves. Placement above or
              below a staff is indicated by the <att>place</att> attribute,
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" rendition="#afterTwoStaves">
                <dynam tstamp="1" layer="1" xml:id="d017" place="below" staff="1"/>
              </egXML>
              placement between two staves is expressed by specifying the numbers of both staves
              in the <att>staff</att> attribute.
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" rendition="#afterTwoStaves">
                <dynam tstamp="1" xml:id="d018" staff="1 2"/>
              </egXML>
              When the <att>staff</att> attribute has multiple values,
              <att>place</att> and <att>layer</att> are not allowed:</p>
            <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" rendition="#afterTwoStaves">
              <dynam tstamp="1" layer="1" xml:id="d019" place="above" staff="1 2"/>
            </egXML>
          </div>
          <div>
            <head>Spanning elements</head>
            <div>
              <head>Hairpins</head>
              <p>Start and end point of <gi>hairpin</gi> elements must be expressed using <att>tstamp</att> and
                <att>tstamp2</att> respectively. <att>startid</att> and <att>endid</att> attributes
                are currently disabled on hairpins.
              </p>
            </div>
            <div>
              <head>Slurs and Ties</head>
              <p>In this customization, slurs and ties are always encoded as elements.</p>
              <p>Since slurs almost always connect notes with other notes,
                their start and end points can nearly always be expressed using the
                <att>startid</att> and <att>endid</att> attributes. Only exceptions are
                <soCalled>partial</soCalled> slurs, such as the ones at the boundary of
                <gi>ending</gi> elements. Such slurs need to be encoded using the <att>tstamp</att>
                or <att>tstamp2</att> attributes. When the inclompete slur starts at the barline,
                <code>@tstamp="0"</code> is used, when the slur is incomplete at its end point,
                <code>@tstamp2="0m+n"</code> is applied (where n is the meter.count of the current
                measure plus one: 5 in 4/4, 3 in 2/4 etc. see <ref
                  target="http://music-encoding.org/documentation/2.1.1/cmn/#cmnTstamp">4.1.5 Timestamps
                  and Durations</ref> of the MEI Guidelines). Additionally, all partial
                slurs have to be supplied with a <att>curvedir</att> attribute indicating the direction of
                the slur (values: <val>above</val> or <val>below</val>).
              </p>
              <p>On the other hand, tstamps are not always enough to describe start and end point of slurs
                (think of a slur in the upper voice, while the lower voice has no slur), therefore we must allow
                the use of both <att>startid</att>/<att>endid</att> and <att>tstamp</att>/<att>tstamp2</att>.

                Since it is simply impractical to assert in which situation which encoding is expected,
                no asserted restrictions apply for using combinations of these attributes to describe
                start and end points of slurs, however, it is required that when tstamps are used,
                the tstamp has to be unambiguously resolved to a single note or chord event.
              </p>
              <p>A typical slur: </p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" rendition="#afterStaff">
                <slur xml:id="d020" startid="#n01" endid="#n02"/>
              </egXML>
              <p>A partial slur within a 2nd ending:</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" rendition="#afterStaff">
                <slur xml:id="d021" tstamp="0" endid="#n02"/>
              </egXML>
            </div>
          </div>
        </div>
      </div>
    </body>
    <back>
      <div xml:id="tidoSchemaSpec">
        <head>Specifications</head>
        <schemaSpec ident="tido" ns="http://www.music-encoding.org/ns/mei"
          start="mei music body mdiv" prefix="tido_">
          <moduleRef key="MEI"/>
          <moduleRef key="MEI.shared"
            except=" actor annot arranger artic author barLine bibl biblList biblScope caption
            castGrp castItem castList clefGrp composer creation custos date depth dir distributor
            div dot edition editor event eventList expansion extent funder genre group grpSym
            head height identifier imprint incip keyAccid label layerDef lb librettist lyricist name
            num pad part parts pb pgDesc pgFoot pgFoot2 pgHead pgHead2 phrase physLoc publisher
            pubPlace recipient relatedItem repository resp role roleDesc sb series sponsor stack
            syl tempo textLang titlePage width"/>
          <moduleRef key="MEI.header"/>
          <moduleRef key="MEI.cmn" except=" arpeg beamSpan beatRpt bend breath bTrem fermata fTrem
            gliss halfmRpt harpPedal meterSigGrp mRpt mRpt2 mSpace multiRest multiRpt octave ossia
            phrase reh tuplet tupletSpan"/>
          <moduleRef key="MEI.namesdates"/>
          <moduleRef key="MEI.ptrref"/>

          <constraintSpec ident="set_ns" scheme="isoschematron">
            <constraint>
              <sch:ns xmlns:sch="http://purl.oclc.org/dsdl/schematron" prefix="mei"
                uri="http://www.music-encoding.org/ns/mei"/>
            </constraint>
          </constraintSpec>

          <macroSpec ident="data.STEMDIRECTION.extended" module="MEI" type="dt" mode="delete"/>

          <classSpec ident="att.accid.anl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.accid.ges" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.accid.vis" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.altsym" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.articulation.performed" module="MEI.shared" type="atts"
            mode="delete"/>
          <classSpec ident="att.authorized" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.barplacement" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.bibl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.canonical" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.chord.anl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.chord.ges" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.clef.anl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.clef.ges" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.clef.vis" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.cleffing.log" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.cleffing.vis" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.color" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.coloration" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.curvature" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.curverend" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.datable" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.datapointing" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.declaring" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.distances" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.duration.additive" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.duration.default" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.duration.performed" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.dynam.anl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.dynam.ges" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.enclosingchars" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.endings" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.extender" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.fermatapresent" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.filing" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.horizontalalign" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.id" module="MEI.shared" type="atts" mode="change">
            <attList>
              <attDef ident="xml:id" usage="req" mode="change">
                <datatype>
                  <rng:data type="ID"/>
                </datatype>
              </attDef>
            </attList>
            <exemplum>
              <p>A valid <gi>note</gi> element with the required <att>xml:id</att></p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" rendition="#inLayer">
                <note pname="a" oct="4" dur="4" stem.dir="up"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>note</gi> element without the required <att>xml:id</att></p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" rendition="#inLayer">
                <note pname="a" oct="4" dur="4" stem.dir="up"/>
              </egXML>
            </exemplum>
          </classSpec>
          <classSpec ident="att.instrumentident" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.joined" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.keySig.anl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.keySig.ges" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.keySig.vis" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.keySigDefault.log" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.keySigDefault.vis" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.labels.addl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.lang" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.layer.anl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.layer.ges" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.layer.log" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.layer.vis" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.linerend" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.linerend.base" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.lyricstyle" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.measure.anl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.measure.ges" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.measurement" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.measurenumbers" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.meterSig.anl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.meterSig.ges" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.meterSig.vis" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.meterSigDefault.log" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.meterSigDefault.vis" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.meterconformance" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.mmtempo" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.multinummeasures" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.notationstyle" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.note.anl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.noteheads" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.octavedefault" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.octavedisplacement" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.onelinestaff" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.optimization" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.ornam.anl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.ornam.ges" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.pages" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.plist" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.pointing" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.relativesize" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.responsibility" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.rest.anl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.rest.ges" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.scalable" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.score.anl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.score.ges" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.score.log" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.score.vis" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.scoreDef.anl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.scoreDef.ges" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.scoreDef.log" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.scoreDef.log.mensural" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.scoreDef.vis" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.section.anl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.section.ges" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.section.log" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.section.vis" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.slurpresent" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.space.anl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.space.ges" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.space.vis" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.spacing" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.staff.anl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.staff.ges" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.staff.log" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.staff.vis" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.staffDef.anl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.staffDef.ges" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.staffDef.log" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.staffGrp.anl" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.staffGrp.ges" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.staffGrp.log" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.staffloc.pitched" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.stems" module="MEI.shared" type="atts" mode="change">
            <attList>
              <attDef ident="stem.dir" usage="opt" mode="replace">
                <desc>Describes the direction of a stem.</desc>
                <datatype>
                  <rng:ref name="data.STEMDIRECTION"/>
                </datatype>
              </attDef>
            </attList>
          </classSpec>
          <classSpec ident="att.systems" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.textstyle" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.tiepresent" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.timestamp.performed" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.transposition" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.tupletpresent" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.visibility" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.visualoffset" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.visualoffset.ho" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.visualoffset.to" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.visualoffset.vo" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.visualoffset2" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.visualoffset2.ho" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.visualoffset2.to" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.visualoffset2.vo" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.whitespace" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.width" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.xy" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.xy2" module="MEI.shared" type="atts" mode="delete"/>
          <classSpec ident="att.beam.anl" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.beam.ges" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.beam.log" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.beam.vis" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.beamed" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.beamedwith" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.beaming.log" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.beaming.vis" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.beamrend" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.beamsecondary" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.chord.log.cmn" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.chord.vis.cmn" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.hairpin.anl" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.hairpin.ges" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.lvpresent" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.measure.vis" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.note.log.cmn" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.note.vis.cmn" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.pedal.anl" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.pedal.ges" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.pianopedals" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.rehearsal" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.rest.log.cmn" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.rest.vis.cmn" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.scoreDef.log.cmn" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.scoreDef.vis.cmn" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.slur.anl" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.slur.ges" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.slur.vis" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.slurrend" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.space.log.cmn" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.staffDef.log.cmn" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.staffDef.vis.cmn" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.stems.cmn" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.tie.anl" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.tie.ges" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.tie.vis" module="MEI.cmn" type="atts" mode="delete"/>
          <classSpec ident="att.tierend" module="MEI.cmn" type="atts" mode="delete"/>

          <classSpec ident="model.scorePart.mensuralAndNeumes" module="MEI.shared" type="model"
            mode="replace"/>
          <classSpec ident="model.sectionPart.mensuralAndNeumes" module="MEI.shared" type="model"
            mode="replace"/>
          <classSpec ident="model.staffPart.mensuralAndNeumes" module="MEI.shared" type="model"
            mode="replace"/>
          <classSpec ident="model.layerPart.mensuralAndNeumes" module="MEI.shared" type="model"
            mode="replace"/>
          <classSpec ident="att.startendid" module="MEI.shared" type="atts" mode="change">
            <attList>
              <attDef ident="endid" usage="opt" mode="change">
                <datatype>
                  <rng:ref name="data.URI.local"/>
                </datatype>
              </attDef>
            </attList>
            <exemplum>
              <p>A valid <gi>pedal</gi> element with a local URI reference in <att>startid</att></p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" rendition="#afterStaff">
                <pedal place="below" layer="1" dir="down" staff="1" startid="#n01" endid="#n02" xml:id="d022"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>pedal</gi> element with local URI references lacking the hash sign
                in <att>startid</att></p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                rendition="#afterStaff">
                <pedal place="below" layer="1" dir="down" staff="1" startid="n01" endid="#n02" xml:id="d023"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>pedal</gi> element with absolute URI references in
                  <att>startid</att></p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                rendition="#afterStaff">
                <pedal place="below" xml:id="d024" dir="down" staff="1" layer="1"
                  startid="http://google.com#start" endid="#n02"/>
              </egXML>
            </exemplum>
          </classSpec>
          <classSpec ident="att.startid" module="MEI.shared" type="atts" mode="change">
            <attList>
              <attDef ident="startid" usage="opt" mode="change">
                <datatype>
                  <rng:ref name="data.URI.local"/>
                </datatype>
              </attDef>
            </attList>
            <exemplum>
              <p>A valid <gi>pedal</gi> element with a local URI reference in <att>endid</att></p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" rendition="#afterStaff">
                <pedal place="below" layer="1" dir="down" staff="1" startid="#n01" endid="#n02" xml:id="d025"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>pedal</gi> element with local URI references lacking the hash sign
                in <att>endid</att></p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                rendition="#afterStaff">
                <pedal place="below" layer="1" dir="down" staff="1" startid="#n01" endid="n02" xml:id="d026"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>pedal</gi> element with absolute URI references in
                  <att>endid</att></p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                rendition="#afterStaff">
                <pedal place="below" layer="1" xml:id="d027" dir="down" staff="1"
                  startid="#n01" endid="http://google.com#end"/>
              </egXML>
            </exemplum>
          </classSpec>
          <!-- require clef/@shape -->
          <classSpec ident="att.clefshape" module="MEI.shared" type="atts" mode="change">
            <attList>
              <attDef ident="shape" usage="req" mode="change">
                <datatype>
                  <rng:ref name="data.CLEFSHAPE"/>
                </datatype>
              </attDef>
            </attList>
            <exemplum>
              <p>A valid <gi>clef</gi> with a <att>shape</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true"
                rendition="#inInitialStaffGrp">
                <staffDef lines="5" xml:id="d028" n="2">
                  <clef shape="G" line="2" xml:id="d029"/>
                </staffDef>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>clef</gi> without a <att>shape</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                rendition="#inInitialStaffGrp">
                <staffDef lines="5" xml:id="d030" n="2">
                  <clef line="2" xml:id="d031"/>
                </staffDef>
              </egXML>
            </exemplum>
          </classSpec>
          <!-- require clef/@line -->
          <classSpec ident="att.lineloc" module="MEI.shared" type="atts" mode="change">
            <attList>
              <attDef ident="line" usage="req" mode="change">
                <datatype>
                  <rng:ref name="data.CLEFLINE"/>
                </datatype>
              </attDef>
            </attList>
            <exemplum>
              <p>A valid <gi>clef</gi> with a <att>line</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true"
                rendition="#inInitialStaffGrp">
                <staffDef lines="5" xml:id="d032" n="2">
                  <clef shape="G" line="2" xml:id="d033"/>
                </staffDef>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>clef</gi> without a <att>line</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                rendition="#inInitialStaffGrp">
                <staffDef lines="5" xml:id="d034" n="2">
                  <clef shape="G" xml:id="d035"/>
                </staffDef>
              </egXML>
            </exemplum>
          </classSpec>
          <!-- === CUSTOM DATATYPES === -->
          <macroSpec ident="data.URI.local" module="MEI" type="dt" mode="add">
            <desc>A local URI starting with #</desc>
            <content>
              <rng:data type="token">
                <rng:param name="pattern">#[A-Za-z][A-Za-z0-9\-_:\.]*</rng:param>
              </rng:data>
            </content>
          </macroSpec>
          <macroSpec ident="data.MEASUREBEAT" module="MEI" type="dt" mode="change">
            <desc>A count of measures plus a beat location, i.e., [0-9]+m\+[0-9]+(\.?[0-9]*)?. The
              measure count is the number of barlines crossed by the event, while the beat location
              is a timestamp in the measure where the event ends. For example, dur="1m+3"
              indicates that the event ends in the next measure on beat 3. The measure number must
              be in the range of 0 to the number of remaining measures and the beat number must be
              in the range from 0 to the numerator of the time signature plus 1. For example, for an
              event starting in the first measure of a piece containing 6 measures in 6/8, the
              measure number must be between 0 to 5 and the beat number must be within the range
              from 0 to 7, e.g., "4m+3". The customization makes the measure part mandatory
              and disallows space characters.</desc>
            <content>
              <rng:data type="token">
                <rng:param name="pattern">[0-9]+m\+[0-9]+(\.?[0-9]*)?</rng:param>
              </rng:data>
            </content>
            <exemplum>
              <p>A valid <att>tstamp2</att></p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true"
                rendition="#afterStaff">
                <slur tstamp="1" tstamp2="0m+2" xml:id="d036"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <att>tstamp2</att> containing spaces</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                rendition="#afterStaff">
                <slur tstamp="1" tstamp2="0m + 2" xml:id="d037"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <att>tstamp2</att> lacking a measure value</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                rendition="#afterStaff">
                <slur tstamp="1" tstamp2="2" xml:id="d038"/>
              </egXML>
            </exemplum>
          </macroSpec>
          <!-- === NEW ATTRIBUTE CLASSES === -->
          <!-- New attribute class for required @staff -->
          <classSpec ident="att.staffident.req" module="MEI.shared" type="atts" mode="add">
            <desc>Make <att>staff</att> required</desc>
            <attList>
              <attDef ident="staff" usage="req" mode="add">
                <datatype maxOccurs="unbounded">
                  <rng:data type="positiveInteger"/>
                </datatype>
              </attDef>
            </attList>
          </classSpec>
          <!-- New attribute class for required @stem.dir -->
          <classSpec ident="att.stemdir.req" module="MEI.shared" type="atts" mode="add">
            <attList>
              <attDef ident="stem.dir" usage="req">
                <desc>Describes the direction of a stem.</desc>
                <datatype>
                  <rng:ref name="data.STEMDIRECTION"/>
                </datatype>
              </attDef>
            </attList>
          </classSpec>
          <!-- New attribute class for required @dur -->
          <classSpec ident="att.duration.musical.req" module="MEI.shared" type="atts" mode="add">
            <desc>Required attributes that express duration in musical terms.</desc>
            <attList>
              <attDef ident="dur" usage="req">
                <desc>records the duration of a feature using the relative durational values
                  provided by the data.DURATION datatype.</desc>
                <datatype>
                  <rng:ref name="data.DURATION"/>
                </datatype>
              </attDef>
            </attList>
          </classSpec>
          <!-- New attribute class for required @tstamp -->
          <classSpec ident="att.timestamp.musical.req" module="MEI.shared" type="atts" mode="add">
            <desc>Required attributes that record a time stamp in terms of musical time, i.e.,
              beats[.fractional beat part].</desc>
            <attList>
              <attDef ident="tstamp" usage="req">
                <desc>encodes the onset time in terms of musical time, i.e.,
                  beats[.fractional_beat_part].</desc>
                <datatype>
                  <rng:ref name="data.BEAT"/>
                </datatype>
              </attDef>
            </attList>
          </classSpec>
          <!-- New attribute class for mandatory @tstamp2 -->
          <classSpec ident="att.timestamp2.musical.req" module="MEI.shared" type="atts" mode="add">
            <desc>Required attributes that record a time stamp for the end of an event in terms of
              musical time.</desc>
            <attList>
              <attDef ident="tstamp2" usage="req">
                <desc>encodes the ending point of an event in terms of musical time, i.e., a count
                  of measures plus a beat location.</desc>
                <datatype>
                  <rng:ref name="data.MEASUREBEAT"/>
                </datatype>
              </attDef>
            </attList>
          </classSpec>
          <!-- === COMMON ATTRIBUTES === -->
          <classSpec ident="att.controlevent" module="MEI.shared" type="atts" mode="change">
            <classes mode="change">
              <memberOf key="att.staffident" mode="delete"/>
              <memberOf key="att.staffident.req" mode="add"/>
            </classes>
            <constraintSpec ident="require_layer_with_singlevalue_staff" scheme="isoschematron" mode="add">
              <desc>Require <att>layer</att> when <att>staff</att> has a single value and the element is not excluded from the rule.</desc>
              <constraint>
                <sch:rule context="mei:*[not(name() = ('slur', 'tie', 'accid'))][@staff][not(contains(@staff, ' '))]">
                  <sch:assert test="exists(@layer)"
                    >@layer must be present when @staff contains a single value.</sch:assert>
                </sch:rule>
              </constraint>
            </constraintSpec>
            <constraintSpec ident="require_place_with_singlevalue_staff" scheme="isoschematron" mode="add">
              <desc>Require <att>place</att> when <att>staff</att> has a single value and the element is not excluded from the rule.</desc>
              <constraint>
                <sch:rule context="mei:*[not(name() = ('slur', 'tie', 'accid'))][@staff][not(contains(@staff, ' '))]">
                  <sch:assert test="exists(@place)"
                    >@place must be present when @staff contains a single value.</sch:assert>
                </sch:rule>
              </constraint>
            </constraintSpec>
            <constraintSpec ident="no_layer_with_multivalue_staff" scheme="isoschematron" mode="add">
              <desc>Prohibit <att>layer</att> when <att>staff</att> has multiple values.</desc>
              <constraint>
                <sch:rule context="mei:*[@staff]">
                  <sch:assert test="not(contains(@staff, ' ') and @layer)"
                    >@layer must be absent when @staff contains multiple values.</sch:assert>
                </sch:rule>
              </constraint>
            </constraintSpec>
            <constraintSpec ident="no_place_with_multivalue_staff" scheme="isoschematron" mode="add">
              <desc>Prohibit <att>place</att> when <att>staff</att> has multiple values.</desc>
              <constraint>
                <sch:rule context="mei:*[@staff]">
                  <sch:assert test="not(contains(@staff, ' ') and @place)"
                    >@place must be absent when @staff contains multiple values.</sch:assert>
                </sch:rule>
              </constraint>
            </constraintSpec>
          </classSpec>
          <classSpec ident="att.spanning.req" module="MEI.shared" type="atts" mode="add">
            <desc>Describing attributes for spanning elements</desc>
            <classes>
              <memberOf key="att.timestamp.musical"/>
              <memberOf key="att.timestamp2.musical"/>
              <memberOf key="att.startendid"/>
              <memberOf key="att.staffident"/>
              <memberOf key="att.layerident"/>
            </classes>
            <constraintSpec ident="require_precisely_one_start_spec"
              scheme="isoschematron" mode="add">
              <desc>Requires that precisely one of <att>startid</att> or <att>tstamp</att> is defined</desc>
              <constraint>
                <!-- the schematron context needs to list all elements which are members of att.spanning.req -->
                <sch:rule context="mei:slur">
                  <sch:assert
                    test="(@tstamp and not(@startid)) or (not(@tstamp) and @startid)"
                    >precisely one of @tstamp or @startid must be defined</sch:assert>
                </sch:rule>
              </constraint>
            </constraintSpec>
            <constraintSpec ident="require_precisely_one_end_spec" scheme="isoschematron" mode="add">
              <desc>Requires that precisely one of <att>endid</att> or <att>tstamp2</att> is defined</desc>
              <constraint>
                <!-- the schematron context needs to list all elements which are members of att.spanning.req -->
                <sch:rule context="mei:slur">
                  <sch:assert
                    test="(@tstamp2 and not(@endid)) or (not(@tstamp2) and @endid)"
                    >precisely one of @tstamp2 or @endid must be defined</sch:assert>
                </sch:rule>
              </constraint>
            </constraintSpec>
          </classSpec>
          <classSpec ident="att.spanning.musical.req" module="MEI.shared" type="atts" mode="add">
            <desc>Describing attributes for spanning elements</desc>
            <classes>
              <memberOf key="att.timestamp.musical.req"/>
              <memberOf key="att.timestamp2.musical.req"/>
              <memberOf key="att.staffident"/>
              <memberOf key="att.layerident"/>
            </classes>
          </classSpec>
          <!-- === REST ATTRIBUTES === -->
          <!-- Add required @dur class to rest attributes set -->
          <classSpec ident="att.rest.log" module="MEI.shared" type="atts" mode="change">
            <classes mode="change">
              <memberOf key="att.duration.musical" mode="delete"/>
              <memberOf key="att.duration.musical.req" mode="add"/>
            </classes>
            <exemplum>
              <p>A valid <gi>rest</gi> element containing the required <att>dur</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" rendition="#inLayer">
                <rest dur="1" xml:id="d039"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>rest</gi> element without the required <att>dur</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" rendition="#inLayer">
                <rest xml:id="d040"/>
              </egXML>
            </exemplum>
          </classSpec>
          <!-- === SPACE ATTRIBUTES === -->
          <!-- Add required @dur class to space attributes set -->
          <classSpec ident="att.space.log" module="MEI.shared" type="atts" mode="change">
            <classes mode="change">
              <memberOf key="att.duration.musical" mode="delete"/>
              <memberOf key="att.duration.musical.req" mode="add"/>
            </classes>
            <exemplum>
              <p>A valid <gi>space</gi> element containing the required <att>dur</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" rendition="#inLayer">
                <space dur="1" xml:id="d041"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>space</gi> element without the required <att>dur</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" rendition="#inLayer">
                <space xml:id="d042"/>
              </egXML>
            </exemplum>
          </classSpec>
          <!-- === NOTE ATTRIBUTES === -->
          <classSpec ident="att.note.log" module="MEI.shared" type="atts" mode="change">
            <classes mode="change">
              <memberOf key="att.accidental" mode="delete"/>
              <memberOf key="att.note.log.mensural" mode="delete"/>
            </classes>
            <constraintSpec ident="require_oct_and_pname_or_loc" scheme="isoschematron" mode="add">
              <desc>Require either <att>pname</att> and <att>oct</att> or <att>loc</att> on a
                note.</desc>
              <constraint>
                <sch:rule context="mei:note">
                  <sch:assert test="(@pname and @oct) or @loc">either @pname and @oct or @loc
                    must be specified on a note.</sch:assert>
                </sch:rule>
              </constraint>
            </constraintSpec>
            <constraintSpec ident="standalone_note_require_dur" scheme="isoschematron" mode="add">
              <desc>Require <att>dur</att> on notes outside chords.</desc>
              <constraint>
                <sch:rule context="mei:note[not(ancestor::mei:chord)]">
                  <sch:assert test="exists(@dur)">Must have dur attribute.</sch:assert>
                </sch:rule>
              </constraint>
            </constraintSpec>
            <constraintSpec ident="standalone_note_require_stem.dir" scheme="isoschematron" mode="add">
              <desc>Require <att>stem.dir</att> on notes outside chords.</desc>
              <constraint>
                <sch:rule context="mei:note[not(ancestor::mei:chord)]">
                  <sch:assert test="exists(@stem.dir)">Must have stem.dir attribute.</sch:assert>
                </sch:rule>
              </constraint>
            </constraintSpec>
            <constraintSpec ident="no_note_dur_in_chord" scheme="isoschematron" mode="add">
              <desc>Forbid @dur on notes in chords.</desc>
              <constraint>
                <sch:rule context="mei:note[ancestor::mei:chord]">
                  <sch:report test="exists(@dur)">@dur attribute not permitted on notes within a chord.</sch:report>
                </sch:rule>
              </constraint>
            </constraintSpec>
            <constraintSpec ident="no_note_stem.dir_in_chord" scheme="isoschematron" mode="add">
              <desc>Forbid @stem.dir on notes in chords.</desc>
              <constraint>
                <sch:rule context="mei:note[ancestor::mei:chord]">
                  <sch:report test="@stem.dir">@stem.dir not permitted on notes within a chord.</sch:report>
                </sch:rule>
              </constraint>
            </constraintSpec>
            <exemplum>
              <p>A valid <gi>note</gi> element containing <att>pname</att>, <att>oct</att>, <att>dur</att> and <att>stem.dir</att> attributes</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" rendition="#inLayer">
                <note pname="a" oct="4" dur="1" stem.dir="up" xml:id="d043"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>A valid <gi>note</gi> element containing <att>loc</att>, <att>dur</att> and <att>stem.dir</att> attributes</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" rendition="#inLayer">
                <note loc="4" dur="1" stem.dir="down" xml:id="d044"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid standalone <att>note</att> element without a <att>stem.dir</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" rendition="#inLayer">
                <note pname="a" oct="4" dur="4" xml:id="d045"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid standalone <att>note</att> element without a <att>dur</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" rendition="#inLayer">
                <note pname="a" dur="4" stem.dir="down" xml:id="d046"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <att>note</att> element with an <att>oct</att> but no <att>pname</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" rendition="#inLayer">
                <note oct="4" dur="4" stem.dir="up" xml:id="d047"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <att>note</att> element with a <att>pname</att> but no <att>oct</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" rendition="#inLayer">
                <note pname="a" dur="4" stem.dir="up" xml:id="d048"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <att>note</att> element missing duration, stem direction and pitch</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" rendition="#inLayer">
                <note xml:id="d049"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>A valid <gi>chord</gi> element with a <att>stem.dir</att> attribute and child notes without <att>stem.dir</att> or <att>dur</att></p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" rendition="#inLayer">
                <chord xml:id="d050" dur="4" stem.dir="up">
                  <note xml:id="d051" pname="a" oct="4"/>
                  <note xml:id="d052" pname="c" oct="4"/>
                </chord>
              </egXML>
            </exemplum>
            <exemplum>
              <p>Invalid child <gi>note</gi> elements containing <att>stem.dir</att> attributes</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" rendition="#inLayer">
                <chord xml:id="d053" dur="4" stem.dir="up">
                  <note xml:id="d054" pname="a" oct="4" stem.dir="up"/>
                  <note xml:id="d055" pname="c" oct="4" stem.dir="up"/>
                </chord>
              </egXML>
            </exemplum>
            <exemplum>
              <p>Invalid child <gi>note</gi> elements containing <att>dur</att> attributes</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" rendition="#inLayer">
                <chord xml:id="d056" dur="4" stem.dir="up">
                  <note xml:id="d057" pname="a" oct="4" dur="4"/>
                  <note xml:id="d058" pname="c" oct="4" dur="4"/>
                </chord>
              </egXML>
            </exemplum>
          </classSpec>
          <!-- === CHORD ATTRIBUTES === -->
          <classSpec ident="att.chord.vis" module="MEI.shared" type="atts" mode="change">
            <classes mode="change">
              <memberOf key="att.stems" mode="delete"/>
              <memberOf key="att.stemdir.req" mode="add"/>
            </classes>
            <exemplum>
              <p>A valid <gi>chord</gi> element with a <att>stem.dir</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" rendition="#inLayer">
                <chord dur="1" stem.dir="up" xml:id="d059">
                  <note pname="a" oct="4" xml:id="d060"/>
                  <note pname="a" oct="4" xml:id="d061"/>
                </chord>
              </egXML>
            </exemplum>
            <exemplum>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" rendition="#inLayer">
                <p>An invalid <gi>chord</gi> element without the required <att>stem.dir</att> attribute</p>
                <chord dur="4" xml:id="d062">
                  <note pname="a" oct="4" xml:id="d063"/>
                  <note pname="a" oct="4" xml:id="d064"/>
                </chord>
              </egXML>
            </exemplum>
          </classSpec>
          <classSpec ident="att.chord.log" module="MEI.shared" type="atts" mode="change">
            <classes mode="change">
              <memberOf key="att.duration.musical" mode="delete"/>
              <memberOf key="att.duration.musical.req" mode="add"/>
            </classes>
            <exemplum>
              <p>A valid <gi>chord</gi> element with a <att>dur</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" rendition="#inLayer">
                <chord dur="1" stem.dir="up" xml:id="d065">
                  <note pname="a" oct="4" xml:id="d066"/>
                  <note pname="a" oct="4" xml:id="d067"/>
                </chord>
              </egXML>
            </exemplum>
            <exemplum>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" rendition="#inLayer">
                <p>An invalid <gi>chord</gi> element without the required <att>dur</att> attribute</p>
                <chord stem.dir="up" xml:id="d068">
                  <note pname="a" oct="4" xml:id="d069"/>
                  <note pname="a" oct="4" xml:id="d070"/>
                </chord>
              </egXML>
            </exemplum>
          </classSpec>
          <!-- === SLUR ATTRIBUTES === -->
          <classSpec ident="att.slur.log" module="MEI.cmn" type="atts" mode="replace">
            <desc>Logical domain attributes.</desc>
            <classes>
              <memberOf key="att.spanning.req"/>
            </classes>
          </classSpec>
          <!-- === HAIRPIN ATTRIBUTES === -->
          <classSpec ident="att.hairpin.log" module="MEI.cmn" type="atts" mode="replace">
            <desc>Logical domain attributes.</desc>
            <classes>
              <memberOf key="att.spanning.musical.req"/>
            </classes>
            <attList>
              <attDef ident="form" usage="req">
                <desc>captures the visual rendition and function of the hairpin; that is, whether it
                  indicates an increase or a decrease in volume.</desc>
                <valList type="closed">
                  <valItem ident="cres">
                    <desc>crescendo; i.e., louder.</desc>
                  </valItem>
                  <valItem ident="dim">
                    <desc>diminuendo; i.e., softer.</desc>
                  </valItem>
                </valList>
              </attDef>
            </attList>
          </classSpec>
          <!-- === ELEMENT SPECIFICATIONS === -->
          <!-- === LAYER === -->
          <elementSpec ident="layer" module="MEI.shared" mode="change">
            <attList>
              <attDef ident="n" usage="req" mode="change">
                <desc>provides a name or number designation for an element. While the value need not
                  be unique, it is required to be a single token. Must be an integer.</desc>
                <datatype>
                  <rng:data type="positiveInteger"/>
                </datatype>
              </attDef>
            </attList>
            <exemplum>
              <p>A valid layer element with a positive integer <att>n</att> value</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" rendition="#inSection">
                <measure n="1" xml:id="d071">
                  <staff n="1" xml:id="d072">
                    <layer n="1" xml:id="d073"/>
                  </staff>
                </measure>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid layer element missing <att>n</att></p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" rendition="#inSection">
                <measure n="1" xml:id="d074">
                  <staff n="1" xml:id="d075">
                    <layer xml:id="d076"/>
                  </staff>
                </measure>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid layer element with a non-integer <att>n</att></p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" rendition="#inSection">
                <measure n="1" xml:id="d077">
                  <staff n="1" xml:id="d078">
                    <layer n="s1" xml:id="d079"/>
                  </staff>
                </measure>
              </egXML>
            </exemplum>
          </elementSpec>
          <!-- === STAFF === -->
          <elementSpec ident="staff" module="MEI.shared" mode="change">
            <attList>
              <attDef ident="n" usage="req" mode="change">
                <desc>provides a name or number designation for an element. While the value need not
                  be unique, it is required to be a single token. Must be an integer.</desc>
                <datatype>
                  <rng:data type="positiveInteger"/>
                </datatype>
              </attDef>
            </attList>
            <exemplum>
              <p>A valid staff element with a positive integer <att>n</att> value</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" rendition="#inSection">
                <measure n="1" xml:id="d080">
                  <staff n="1" xml:id="d081">
                    <layer n="1" xml:id="d082"/>
                  </staff>
                </measure>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid staff element missing <att>n</att></p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" rendition="#inSection">
                <measure n="1" xml:id="d083">
                  <staff xml:id="d084">
                    <layer n="1" xml:id="d085"/>
                  </staff>
                </measure>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid staff element with a non-integer <att>n</att></p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" rendition="#inSection">
                <measure n="1" xml:id="d086">
                  <staff n="s1" xml:id="d087">
                    <layer n="1" xml:id="d088"/>
                  </staff>
                </measure>
              </egXML>
            </exemplum>
          </elementSpec>
          <!-- === SLUR === -->
          <elementSpec ident="slur" module="MEI.cmn" mode="change">
            <constraintSpec ident="slur_containing_curve" scheme="isoschematron" mode="delete"/>
            <exemplum>
              <p>A valid <gi>slur</gi> with <att>tstamp</att> and <att>tstamp2</att> attributes</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true"
                rendition="#afterStaff">
                <slur tstamp="1" tstamp2="0m+2" xml:id="d089"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>A valid <gi>slur</gi> with <att>startid</att> and <att>endid</att> attributes</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true"
                rendition="#afterStaff">
                <slur startid="#n01" endid="#n02" xml:id="d090"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>A valid <gi>slur</gi> with <att>tstamp</att> and <att>endid</att> attributes</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true"
                rendition="#afterStaff">
                <slur tstamp="1" endid="#n02" xml:id="d091"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>A valid <gi>slur</gi> with <att>startid</att> and <att>tstamp2</att> attributes</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true"
                rendition="#afterStaff">
                <slur startid="#n01" tstamp2="0m+2" xml:id="d092"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>A valid <gi>slur</gi> with a single value in <att>staff</att> and a <att>layer</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" rendition="#afterStaff">
                <slur xml:id="d093" layer="1" staff="1" tstamp="1" tstamp2="0m+2"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>slur</gi> without an attribute for the end point</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" rendition="#afterStaff">
                <slur xml:id="d094" startid="#n01"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>slur</gi> without an attribute for the start point</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" rendition="#afterStaff">
                <slur xml:id="d095" endid="#n02"/>
              </egXML>
            </exemplum>
            <remarks>
              <p>Historically, the term "slur" indicated two notes performed legato, while the term
                "phrase" was used for a "unified melodic idea". Nowadays, however, "slur" often has the
                same meaning as "phrase", since the visual rendition of the two
                concepts is the same. Generic MEI provides two distinct elements so that those users wishing to
                maintain a distinction for historical reasons may do so. This basic MEI customization does not maintain
                this distiction, and employs the more generic <gi scheme="MEI">slur</gi> element.
              </p>
            </remarks>
          </elementSpec>
          <!-- === HAIRPIN -->
          <elementSpec ident="hairpin" module="MEI.cmn" mode="change">
            <constraintSpec ident="hairpin_start-_and_end-type_attributes_required" scheme="isoschematron" mode="replace"/>
            <constraintSpec ident="hairpin_place_required_with_single_staff" scheme="isoschematron" mode="add">
              <desc>Require <att>place</att> on <gi>hairpin</gi> when <att>staff</att> has a single value.</desc>
              <constraint>
                <sch:rule context="mei:hairpin[not(contains(@staff, ' '))]">
                  <sch:assert test="exists(@place)">Must have place attribute.</sch:assert>
                </sch:rule>
              </constraint>
            </constraintSpec>
            <exemplum>
              <p>A valid <gi>hairpin</gi> with all required and optional attributes</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" rendition="#afterStaff">
                <hairpin form="cres" tstamp="1" tstamp2="0m+2" staff="1" layer="1" place="above" xml:id="d096"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>A valid <gi>hairpin</gi> with two values in <att>staff</att> and no <att>layer</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true"
                rendition="#afterTwoStaves">
                <hairpin form="cres" tstamp="1" tstamp2="0m+2" staff="1 2" xml:id="d097"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>hairpin</gi> missing the <att>staff</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                rendition="#afterTwoStaves">
                <hairpin form="cres" tstamp="1" tstamp2="0m+2" xml:id="d098"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>A valid <gi>hairpin</gi> with a single value in <att>staff</att> and multiple values in <att>layer</att></p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true"
                rendition="#afterTwoStaves">
                <hairpin form="cres" tstamp="1" tstamp2="0m+2" staff="1" layer="1 2 3" place="below" xml:id="d099"
                />
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>hairpin</gi> with a single value in <att>staff</att> missing the <att>place</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false" rendition="#afterStaff">
                <hairpin form="cres" tstamp="1" tstamp2="0m+2" staff="1" layer="1" xml:id="d100"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>hairpin</gi> missing the <att>form</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                rendition="#afterStaff">
                <hairpin tstamp="1" tstamp2="0m+2" staff="1 2" xml:id="d101"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>hairpin</gi> using the <att>endid</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                rendition="#afterStaff">
                <hairpin form="cres" tstamp="1" tstamp2="0m+2" staff="1 2" endid="#n02" xml:id="d102"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>hairpin</gi> using the <att>startid</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                rendition="#afterStaff">
                <hairpin form="cres" tstamp="1" startid="#n01" tstamp2="0m+2" staff="1 2" xml:id="d103"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>hairpin</gi> missing the <att>tstamp2</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                rendition="#afterStaff">
                <hairpin form="cres" tstamp="1" staff="1 2" xml:id="d104"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>hairpin</gi> missing the <att>tstamp</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                rendition="#afterStaff">
                <hairpin form="cres" tstamp2="0m+2" staff="1 2" xml:id="d105"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>hairpin</gi> with multiple values in <att>staff</att> and a <att>layer</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                rendition="#afterTwoStaves">
                <hairpin form="cres" tstamp="1" tstamp2="0m+2" staff="1 2" layer="1"
                  xml:id="d106"/>
              </egXML>
            </exemplum>
            <remarks>
              <p>The <gi scheme="MEI">hairpin</gi> element is used for <emph>graphical</emph>, i.e.,
                crescendo and diminuendo, dynamic markings. For instantaneous or continuous
                <emph>textual</emph> dynamics, such as 'p', 'mf', or 'cres. poco a poco', the <gi
                  scheme="MEI">dynam</gi> element should be used. As opposed to generic MEI, in this basic
                customization the start and end point of the hairpin is always encoded with
                <att>tstamp</att>, and <att>tstamp2</att> attributes.</p>
            </remarks>
          </elementSpec>
          <!-- === STAFFDEF === -->
          <elementSpec ident="staffDef" module="MEI.shared" mode="change">
            <attList>
              <attDef ident="n" usage="req" mode="change">
                <desc>provides a name or number designation for an element. While the value need not
                  be unique, it is required to be a single token. Must be an integer.</desc>
                <datatype>
                  <rng:data type="positiveInteger"/>
                </datatype>
              </attDef>
            </attList>
            <exemplum>
              <p>A valid <gi>staffDef</gi> with an <att>n</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true"
                rendition="#inInitialStaffGrp">
                <staffDef lines="5" xml:id="d107" n="1"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>staffDef</gi> missing the n attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                rendition="#inInitialStaffGrp">
                <staffDef lines="5" xml:id="d108"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>A valid <gi>staffDef</gi> containing all required attributes and a <gi>clef</gi> child element</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true"
                rendition="#inInitialStaffGrp">
                <staffDef lines="5" xml:id="d109" n="2">
                  <clef shape="G" line="2" xml:id="d110"/>
                </staffDef>
              </egXML>
            </exemplum>
            <exemplum>
              <p>A valid <gi>staffDef</gi> containing all required attributes and a <gi>meterSig</gi> child element</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true"
                rendition="#inInitialStaffGrp">
                <staffDef lines="5" xml:id="d111" n="3">
                  <meterSig count="4" unit="4" xml:id="d112"/>
                </staffDef>
              </egXML>
            </exemplum>
          </elementSpec>
          <!-- === METER SIG === -->
          <elementSpec ident="meterSig" module="MEI.cmn" mode="change">
            <constraintSpec ident="meter_att_pair" scheme="isoschematron" mode="add">
              <desc>@count and @unit must occur together.</desc>
              <constraint>
                <sch:rule context="mei:meterSig">
                  <sch:report test="not(@count and @unit)">Time signature must be complete (both
                    @count and @unit are required).</sch:report>
                </sch:rule>
              </constraint>
            </constraintSpec>
            <exemplum>
              <p>A valid <gi>meterSig</gi> containing all required attributes</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true"
                rendition="#inInitialStaffGrp">
                <staffDef n="1" lines="5" xml:id="d113">
                  <meterSig xml:id="d114" count="4" unit="4"/>
                </staffDef>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>meterSig</gi> without the <att>unit</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                rendition="#inInitialStaffGrp">
                <staffDef n="1" lines="5" xml:id="d115">
                  <meterSig xml:id="d116" count="4"/>
                </staffDef>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>meterSig</gi> without the <att>count</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                rendition="#inInitialStaffGrp">
                <staffDef n="1" lines="5" xml:id="d117">
                  <meterSig xml:id="d118" unit="4"/>
                </staffDef>
              </egXML>
            </exemplum>
          </elementSpec>
          <!-- === KEY SIG === -->
          <elementSpec ident="keySig" module="MEI.shared" mode="change">
            <constraintSpec ident="key_att_pair" scheme="isoschematron" mode="add">
              <desc>@pname and @mode must occur together.</desc>
              <constraint>
                <sch:rule context="mei:keySig">
                  <sch:report test="not(@pname and @mode)"> Key signature must be complete (both
                    @pname and @mode are required).</sch:report>
                </sch:rule>
              </constraint>
            </constraintSpec>
            <exemplum>
              <p>A valid <gi>keySig</gi> with all required attributes</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true"
                rendition="#inInitialStaffGrp">
                <staffDef n="1" xml:id="d119">
                  <keySig xml:id="d120" pname="f" mode="major"/>
                </staffDef>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>keySig</gi> with an <att>accid</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true"
                rendition="#inInitialStaffGrp">
                <staffDef n="1" xml:id="d121">
                  <keySig xml:id="d122" pname="f" accid="s" mode="major"/>
                </staffDef>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid <gi>keySig</gi> without the <att>mode</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                rendition="#inInitialStaffGrp">
                <staffDef n="1" xml:id="d123">
                  <keySig xml:id="d124" pname="f"/>
                </staffDef>
              </egXML>
            </exemplum>
            <exemplum>
              <p>A invalid <gi>keySig</gi> without the <att>pname</att> attribute</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                rendition="#inInitialStaffGrp">
                <staffDef n="1" xml:id="d125">
                  <keySig xml:id="d126" mode="major"/>
                </staffDef>
              </egXML>
            </exemplum>
          </elementSpec>
          <!-- === PEDAL === -->
          <elementSpec ident="pedal" module="MEI.cmn" mode="change">
            <constraintSpec ident="pedal_style_consistent" scheme="isoschematron" mode="add">
              <constraint>
                <sch:rule context="mei:pedal[@form][@dir=('bounce', 'up')]">
                  <sch:let name="form" value="@form"/>
                  <sch:assert test="preceding::mei:pedal[@dir=('down', 'half')][1][@form=$form]">
                    Pedal styles must be consistent between pedal down and pedal up.</sch:assert>
                </sch:rule>
              </constraint>
            </constraintSpec>
            <exemplum>
              <p>A valid sequence of <gi>pedal</gi> elements</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" rendition="#afterStaff">
                <pedal place="below" layer="1" dir="down" tstamp="1" form="line" staff="1" xml:id="d127"/>
                <pedal place="below" layer="1" dir="bounce" tstamp="1" form="line" staff="1" xml:id="d128"/>
                <pedal place="below" layer="1" dir="up" tstamp="2" form="line" staff="1" xml:id="d129"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid sequence of <gi>pedal</gi> elements</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                rendition="#afterStaff">
                <pedal place="below" layer="1" dir="down" tstamp="1" form="line" staff="1" xml:id="d130"/>
                <pedal place="below" layer="1" dir="bounce" tstamp="1" form="line" staff="1" xml:id="d131"/>
                <pedal place="below" layer="1" dir="up" tstamp="2" form="pedstar" staff="1" xml:id="d132"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>An invalid sequence of <gi>pedal</gi> elements</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false"
                rendition="#afterStaff">
                <pedal place="below" layer="1" dir="down" tstamp="1" form="line" staff="1" xml:id="d133"/>
                <pedal place="below" layer="1" dir="bounce" tstamp="1" form="altpedstar" staff="1" xml:id="d134"/>
                <pedal place="below" layer="1" dir="up" tstamp="2" form="line" staff="1" xml:id="d135"/>
              </egXML>
            </exemplum>
            <exemplum>
              <p>A valid sequence of <gi>pedal</gi> elements</p>
              <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="true" rendition="#afterStaff">
                <pedal place="below" layer="1" dir="half" tstamp="1" form="altpedstar" staff="1" xml:id="d136"/>
                <pedal place="below" layer="1" dir="up" tstamp="2" form="altpedstar" staff="1" xml:id="d137"/>
              </egXML>
            </exemplum>
          </elementSpec>
          <!-- === NUMBER PLACEMENT === -->
          <classSpec ident="att.numberplacement" module="MEI.cmn" type="atts" mode="change">
            <attList>
              <attDef ident="num.loc" usage="opt" mode="add" ns="http://tido-music.com/ns/1.0">
                <desc>holds the staff location of the number.</desc>
                <datatype>
                  <rng:ref name="data.STAFFLOC"/>
                </datatype>
              </attDef>
            </attList>
          </classSpec>
          <!-- DATA TYPES -->
          <macroSpec ident="data.ACCIDENTAL.EXPLICIT" module="MEI" type="dt" mode="replace">
            <desc>Accidental attribute values.</desc>
            <content>
              <valList type="closed">
                <valItem ident="s">
                  <desc>Sharp.</desc>
                </valItem>
                <valItem ident="f">
                  <desc>Flat.</desc>
                </valItem>
                <valItem ident="x">
                  <desc>Double sharp (written using croix).</desc>
                </valItem>
                <valItem ident="ff">
                  <desc>Double flat.</desc>
                </valItem>
                <valItem ident="n">
                  <desc>Natural.</desc>
                </valItem>
              </valList>
            </content>
            <remarks>
              <p>
                <graphic
                  url="https://music-encoding.googlecode.com/svn/trunk/source/guidelines/Images/ExampleImages/accid-20100510.png"
                  height="50%" width="50%"/>
              </p>
            </remarks>
          </macroSpec>
          <macroSpec ident="data.ACCIDENTAL.IMPLICIT" module="MEI" type="dt" mode="replace">
            <desc>Accidental attribute values.</desc>
            <valList type="closed">
              <valItem ident="s">
                <desc>Sharp.</desc>
              </valItem>
              <valItem ident="f">
                <desc>Flat.</desc>
              </valItem>
              <valItem ident="ss">
                <desc>Double sharp.</desc>
              </valItem>
              <valItem ident="ff">
                <desc>Double flat.</desc>
              </valItem>
              <valItem ident="n">
                <desc>Natural.</desc>
              </valItem>
            </valList>
          </macroSpec>
          <macroSpec ident="data.ARTICULATION" module="MEI" type="dt" mode="replace">
            <desc>The following list of articulations mostly corresponds to symbols from the Western
              Musical Symbols portion of the Unicode Standard. The dot and stroke values may be used
              in cases where interpretation is difficult or undesirable.</desc>
            <content>
              <valList type="closed">
                <valItem ident="acc">
                  <desc>Accent (Unicode 1D17B).</desc>
                </valItem>
                <valItem ident="stacc">
                  <desc>Staccato (Unicode 1D17C).</desc>
                </valItem>
                <valItem ident="ten">
                  <desc>Tenuto (Unicode 1D17D).</desc>
                </valItem>
                <valItem ident="stacciss">
                  <desc>Staccatissimo (Unicode 1D17E).</desc>
                </valItem>
                <valItem ident="marc">
                  <desc>Marcato (Unicode 1D17F).</desc>
                </valItem>
              </valList>
            </content>
          </macroSpec>
        </schemaSpec>
      </div>
    </back>
  </text>
</TEI>
