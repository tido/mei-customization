<?xml version="1.0" encoding="UTF-8"?>
<!-- 
  © 2015 by the Music Encoding Initiative (MEI).
  Licensed under the Educational Community License, Version 2.0 (the "License"); you may
  not use this file except in compliance with the License. You may obtain a copy of the License
  at http://opensource.org/licenses/ECL-2.0.
  
  Unless required by applicable law or agreed to in writing, software distributed under the
  License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS
  OF ANY KIND, either express or implied. See the License for the specific language
  governing permissions and limitations under the License.
  
  This is a derivative work based on earlier versions of the schema © 2001-2006 Perry Roland
  and the Rector and Visitors of the University of Virginia; licensed under the Educational
  Community License version 1.0.
  
  CONTACT: info@music-encoding.org
-->

<div xmlns="http://www.tei-c.org/ns/1.0" type="div1" xml:id="ptrRef" n="0">
  <head>Pointers and References</head>
  <p>This chapter describes the use of elements for linking and referencing.</p>
  <div type="div2" xml:id="ptrrefModule">
    <head>Links</head>
    <p>An element is a <soCalled>link</soCalled> when it has an attribute whose value is a reference
      to the ID of one or more other elements. The links discussed in this chapter are the <gi
        scheme="MEI">ptr</gi> and the <gi scheme="MEI">ref</gi> elements. These elements indicate an
      association between themselves (or one of their ancestors) and one or more other entities,
      either inside the same document or elsewhere. An association between two elements in the same
      document is said to be an <soCalled>internal</soCalled> link, while an association that
      involves an entity outside the current document is called an <soCalled>external</soCalled>
      link. However, either element can be used for either purpose.</p>
    <p>The two elements share a set of common attributes that are inherited from the <ident
        type="class">att.pointing</ident> class:</p>
    <list type="gloss">
      <label>target</label>
      <item> - allows the use of one or more previously-undeclared URIs to identify an external
        electronic object.</item>
      <label>targettype</label>
      <item> - in contrast with the role attribute, allows the target resource to be characterized
        using any convenient classification scheme or typology.</item>
      <label>xlink:actuate</label>
      <item> - defines whether a link occurs automatically or must be requested by the user.</item>
      <label>xlink:show</label>
      <item> - defines how a remote resource is rendered.</item>
      <label>xlink:title</label>
      <item> - contains a human-readable description of the entire link.</item>
      <label>xlink:role</label>
      <item> - indicates a property of the entire link. The value of the role attribute must be a
        URI.</item>
    </list>

    <p>The <att>target</att> attribute specifies the destination of a pointer or reference using a
      method standardized by the W3C consortium, known as the XPointer mechanism. The XPointer
      framework is described at <ref target="http://www.w3.org/TR/xptr-framework/"
        >http://www.w3.org/TR/xptr-framework/</ref>. This mechanism permits a range of complexity,
      from the very simple (a reference to the value of the target element's <att>xml:id</att>
      attribute) to the more complex usage of a full URI with embedded XPointers:</p>
    <egXML xmlns="http://www.tei-c.org/ns/Examples">
      <!-- element ID -->
      <ptr target="#SA"/>
      <!-- relative URL -->
      <ptr target="myFile.xml"/>
      <!-- absolute URL -->
      <ptr target="http://www.w3.org/TR/xptr-framework/"/>
      <!-- URL with fragment identifier -->
      <ptr target="http://www.w3.org/TR/xptr-xpointer/#xpointer(id('chum')/quote)"/>
      <!-- URN -->
      <ref target="urn:isan:0000-0000-9E59-0000-O-0000-0000-2">Spider-Man</ref>
    </egXML>

    <p>The <att>targettype</att> attribute allows the target resource to be characterized using any
      convenient classification scheme or typology. This is often useful when the target requires
      special processing, e.g., for display purposes. The two pointers in the example below may be
      formatted differently, e.g., the bibliographic citation may result in special typography while
      the pointer to the audio file may be used to embed an audio player:</p>
    <egXML xmlns="http://www.tei-c.org/ns/Examples">
      <ptr target="#cit1" targettype="biblioCitation"/>
      <ptr target="http://path.to.resource/myAudio.aiff" targettype="audioClip"/>
    </egXML>

    <p>The <att>xlink:actuate</att> and <att>xlink:show</att> attributes are used in conjunction to
      determine the link's behavior. The attribute <att>xlink:actuate</att> defines whether the
      resolution of a link occurs automatically or must be requested by the user.</p>

    <p>The following values are allowed for the <att>xlink:actuate</att> attribute:</p>
    <list type="gloss">
      <label>'onLoad'</label>
      <item> - load the target resource immediately</item>
      <label>'onRequest'</label>
      <item> - load the target resource upon user request, e.g., after a mouse click</item>
      <label>'other'</label>
      <item> - traversal behavior is unconstrained; application should look for other markup to
        determine appropriate behavior</item>
      <label>'none'</label>
      <item> - traversal behavior is unconstrained; no other markup is provided to determine
        appropriate behavior</item>
    </list>

    <p>The value "none" may be used to indicate that the link is un-traversable; it may or may not
      render the link invisible to the user. When the value of <att>xlink:actuate</att> is "other",
      an application must base a determination of appropriate behavior on factors other than the
      value of <att>xlink:actuate</att>.</p>

    <p>The <att>show</att> attribute defines how a remote resource is to be rendered. The following
      values are permitted:</p>
    <p>
      <list type="gloss">
        <label>'new'</label>
        <item> - target of the link appears in a new window</item>
        <label>'replace'</label>
        <item> - target of the link replaces the current resource</item>
        <label>'embed'</label>
        <item> - the content of the target appears at the point of the link</item>
        <label>'other'</label>
        <item> - traversal behavior is unconstrained; application should look for other markup to
          determine appropriate behavior</item>
        <label>'none'</label>
        <item> - traversal behavior is unconstrained; no other markup is provided to determine
          appropriate behavior</item>
      </list></p>

    <p>When the value of <att>xlink:show</att> is "other", an application must base a determination
      of appropriate behavior on factors other than the value of <att>xlink:show</att>. The value
      "none" may be used to indicate a link that is not displayed or is not displayable.</p>
    <p>The following example illustrates a pointer that results in the automatic creation of a new
      window with the content of the target loaded in it:</p>
    <egXML xmlns="http://www.tei-c.org/ns/Examples" xmlns:xlink="http://www.w3.org/1999/xlink">
      <ptr target="http://www.ietf.org/rfc/rfc2046.txt" mimetype="text" xlink:actuate="onLoad"
        xlink:show="new"/>
    </egXML>

    <p>The <att>xlink:title</att> and <att>xlink:role</att> attributes describe the meaning of
      resources within the context of a link. The <att>xlink:title</att> attribute is used to label
      or describe a link or resource in a human-readable fashion. The value here is highly dependent
      on the kind of processing being done. It may be used, for example, to make link titles
      available to applications used by visually impaired users, or to create a table of links, or
      to present help text that appears when a user's mouse hovers over the link.</p>
    <egXML xmlns="http://www.tei-c.org/ns/Examples" xmlns:xlink="http://www.w3.org/1999/xlink">
      <ptr target="http://www.music-encoding.org" xlink:title="hompage of the MEI Project"/>
    </egXML>

    <p>The attribute<att> xlink:role</att> serves a similar function to that of
        <att>xlink:title</att>. Whereas the value of <att>xlink:title</att> may be any string, the
      value of <att>xlink:role</att> must be an absolute URI reference as defined in IETF RFC 3986,
      available at <ref target="http://tools.ietf.org/html/rfc3986"
        >http://tools.ietf.org/html/rfc3986</ref>. The URI reference identifies a resource that
      describes the intended property. When no value is supplied, no particular role value is to be
      inferred.</p>
    <egXML xmlns="http://www.tei-c.org/ns/Examples" xmlns:xlink="http://www.w3.org/1999/xlink">
      <ptr target="joe.xml" xlink:title="Click here"
        xlink:role="http://www.example.com/linkprops/student"/>
      <ptr target="joe.xml" xlink:title="Click here"
        xlink:role="http://www.example.com/linkprops/instructor"/>
    </egXML>
    <p>In the preceding example, the value of the <att>xlink:role</att> attribute may be used to
      re-write the value of <att>xlink:title</att>, depending on the target resource role.</p>

    <p>In addition to the attributes in the <ident type="class">att.pointing</ident> class, the
        <att>mimetype</att> attribute is also available on <gi scheme="MEI">ptr</gi> and <gi
        scheme="MEI">ref</gi>. The function of the <att>mimetype</att> attribute is similar to that
      of <att>targettype</att> in that they both allow classification of the destination. Unlike
        <att>targettype</att>, however, <att>mimetype</att> explicitly defines the destination type
      using a standard taxonomy. Its value should be a valid MIME (Multimedia Internet Mail
      Extension) type defined by the Internet Engineering Task Force in RFC 2046, available at <ref
        target="http://www.ietf.org/rfc/rfc2046.txt">http://www.ietf.org/rfc/rfc2046.txt</ref>. The
      following are all valid mimetype values:</p>
    <egXML xmlns="http://www.tei-c.org/ns/Examples">
      <ptr target="my.pdf" mimetype="application/pdf"/>
      <ptr target="my.xml" mimetype="text/xml"/>
      <ptr target="my.png" mimetype="image/png"/>
    </egXML>
    <p>The <att>mimetype</att> attribute is particularly useful for documenting the nature of the
      destination when the value of <att>target</att> does not provide a filename extension or when
      the destination is a non-standard file type:</p>
    <egXML xmlns="http://www.tei-c.org/ns/Examples">
      <ptr target="myFile1" mimetype="application/pdf"/>
      <ptr target="myFile2" mimetype="application/x-myApplicationSpecificFile"/>
    </egXML>

    <div type="div3" xml:id="ptrRefDifference">
      <head>Difference between Pointers and References</head>
      <p>The <gi scheme="MEI">ptr</gi> element is an empty linking element that uses only attributes
        to provide for movement from one place to another. Unlike the <gi scheme="MEI">ref</gi>
        element, it cannot contain text or sub-elements to describe the referenced object. Its
        primary function is simply to point to another location. The next example shows targets that
        are page numbers; or more precisely, the targets are page break elements bearing these
        identifiers:</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <list>
          <li>
            <!-- item description -->
            <ptr target="#p123"/>
          </li>
          <li>
            <!-- item description -->
            <ptr target="#p124"/>
          </li>
        </list>
      </egXML>
      <p>As shown above, the <gi scheme="MEI">ptr</gi> element can be used to <soCalled>point
          to</soCalled> a digital image. However, when the intention is to <emph>display</emph> a
        digital image as part of the rendering of an MEI file, the <gi scheme="MEI">graphic</gi>
        element provides a convenient and recommended alternative:</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <graphic target="myPic.png" mimetype="image/png"/>
      </egXML>

      <p>While <gi scheme="MEI">ptr</gi> cannot contain other markup, the <gi scheme="MEI">ref</gi>
        element can include text and sub-elements that name or describe the destination:</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <repository>
          <ref target="http://path.to.target/repo1.xml">
            <title>...</title>
            <address>
      <addrLine/>
    </address>
            <identifier>...</identifier>
          </ref>
        </repository>
      </egXML>

      <p>The <att>target</att> attribute is not required in order to mark the textual content as a
        cross-reference, as demonstrated in the example below; however, without this attribute the
        reference will not be resolvable.</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
        <p>See <ref>Hankinson, Roland, Fujinaga (2011)</ref>.</p>
      </egXML>
    </div>
  </div>
  <!--<div type="div2" xml:id="ptrRefOverview">
    <head>Overview of the ptrRef Module</head>
    <p>The module described in this chapter makes available the following components:</p>
    <div type="div3" xml:id="ptrrefElements">
      <head>Elements</head>
      <p>
        <specList>
          <specDesc key="ptr"/>
          <specDesc key="ref"/>
        </specList>
      </p>
    </div>
    <div type="div3" xml:id="ptrrefAttributeClasses">
      <head>Attribute Classes</head>
      <p>No attribute classes are defined in this module.</p>
    </div>
    <div type="div3" xml:id="ptrrefModelClasses">
      <head>Model Classes</head>
      <p>
        <specList>
          <specDesc key="model.locrefLike"/>
        </specList>
      </p>
    </div>
  </div>-->
</div>
